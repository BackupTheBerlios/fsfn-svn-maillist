From muaddib at berlios.de  Sun Nov 27 15:39:35 2005
From: muaddib at berlios.de (muaddib at BerliOS)
Date: Sun, 27 Nov 2005 15:39:35 +0100
Subject: [Fsfn-svn] r19 - trunk/fsfn/src
Message-ID: <200511271439.jAREdZEE011707@sheep.berlios.de>

Author: muaddib
Date: 2005-11-27 15:39:34 +0100 (Sun, 27 Nov 2005)
New Revision: 19

Added:
   trunk/fsfn/src/autodev.c
   trunk/fsfn/src/autodev.h
Modified:
   trunk/fsfn/src/Makefile.am
   trunk/fsfn/src/Makefile.in
   trunk/fsfn/src/fsfn.c
Log:
A basic system to discover right event to use following Garry idea. This should need more tuning and is intended as a 'test'. To use it, set /etc/fsfn.conf DEVICE entry to AUTO (or lauch with AUTO as device).
Note: default is still /dev/input/event0 - if test of, default can be set a AUTO to use this code.


Modified: trunk/fsfn/src/Makefile.am
===================================================================
--- trunk/fsfn/src/Makefile.am	2005-11-27 03:20:13 UTC (rev 18)
+++ trunk/fsfn/src/Makefile.am	2005-11-27 14:39:34 UTC (rev 19)
@@ -1,10 +1,10 @@
 bin_PROGRAMS = fsfn
-fsfn_SOURCES = fsfn.c alsasound.c acpihandler.c basicmsg.c osd.c readconfig.c
+fsfn_SOURCES = fsfn.c alsasound.c acpihandler.c basicmsg.c osd.c readconfig.c autodev.c
 
 # set the include path found by configure
 INCLUDES = $(all_includes)
 
 # the library search path.
 fsfn_LDFLAGS = $(all_libraries) 
-noinst_HEADERS = alsasound.h acpihandler.h osd.h generics.h basicmsg.h readconfig.h
+noinst_HEADERS = alsasound.h acpihandler.h osd.h generics.h basicmsg.h readconfig.h autodev.h
 AM_CFLAGS = -Wall

Modified: trunk/fsfn/src/Makefile.in
===================================================================
--- trunk/fsfn/src/Makefile.in	2005-11-27 03:20:13 UTC (rev 18)
+++ trunk/fsfn/src/Makefile.in	2005-11-27 14:39:34 UTC (rev 19)
@@ -54,7 +54,7 @@
 PROGRAMS = $(bin_PROGRAMS)
 am_fsfn_OBJECTS = fsfn.$(OBJEXT) alsasound.$(OBJEXT) \
 	acpihandler.$(OBJEXT) basicmsg.$(OBJEXT) osd.$(OBJEXT) \
-	readconfig.$(OBJEXT)
+	readconfig.$(OBJEXT) autodev.$(OBJEXT)
 fsfn_OBJECTS = $(am_fsfn_OBJECTS)
 fsfn_LDADD = $(LDADD)
 DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
@@ -146,14 +146,14 @@
 sharedstatedir = @sharedstatedir@
 sysconfdir = @sysconfdir@
 target_alias = @target_alias@
-fsfn_SOURCES = fsfn.c alsasound.c acpihandler.c basicmsg.c osd.c readconfig.c
+fsfn_SOURCES = fsfn.c alsasound.c acpihandler.c basicmsg.c osd.c readconfig.c autodev.c
 
 # set the include path found by configure
 INCLUDES = $(all_includes)
 
 # the library search path.
 fsfn_LDFLAGS = $(all_libraries) 
-noinst_HEADERS = alsasound.h acpihandler.h osd.h generics.h basicmsg.h readconfig.h
+noinst_HEADERS = alsasound.h acpihandler.h osd.h generics.h basicmsg.h readconfig.h autodev.h
 AM_CFLAGS = -Wall
 all: all-am
 
@@ -223,6 +223,7 @@
 
 @AMDEP_TRUE@@am__include@ @am__quote at ./$(DEPDIR)/acpihandler.Po at am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote at ./$(DEPDIR)/alsasound.Po at am__quote@
+ at AMDEP_TRUE@@am__include@ @am__quote at ./$(DEPDIR)/autodev.Po at am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote at ./$(DEPDIR)/basicmsg.Po at am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote at ./$(DEPDIR)/fsfn.Po at am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote at ./$(DEPDIR)/osd.Po at am__quote@

Added: trunk/fsfn/src/autodev.c
===================================================================
--- trunk/fsfn/src/autodev.c	2005-11-27 03:20:13 UTC (rev 18)
+++ trunk/fsfn/src/autodev.c	2005-11-27 14:39:34 UTC (rev 19)
@@ -0,0 +1,190 @@
+/***************************************************************************
+ *   Copyright (C) 2005 by Poissinger Pierre   *
+ *   pierre.poissinger at gmail.com   *
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ *   This program is distributed in the hope that it will be useful,       *
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
+ *   GNU General Public License for more details.                          *
+ *                                                                         *
+ *   You should have received a copy of the GNU General Public License     *
+ *   along with this program; if not, write to the                         *
+ *   Free Software Foundation, Inc.,                                       *
+ *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
+ ***************************************************************************/
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+#include "autodev.h"
+
+// defines here to not shows unusefull implem. details to callers  
+#define MAX_SIZE	255
+#define MAX_DEVICE_LIST	255
+#define DEVICE_FILE	"/proc/bus/input/devices"
+
+// simple struct to hold parse details
+typedef struct {
+	char name[MAX_SIZE];
+	char entry[MAX_SIZE];
+} entry_device;
+
+// size of parsed result
+int size=0;
+// the entry device
+entry_device devices_list[MAX_DEVICE_LIST];
+
+// for finite autom
+#define STATE_NORMAL		1
+#define STATE_NEW		2
+#define STATE_NAME		3
+#define STATE_NAME_COPY		4
+#define STATE_HANDLER		5
+#define STATE_HANDLER_COPY	6
+
+void parseDevice(FILE*);
+int parseFile(char*);
+
+/* Launch parse on a file */
+int parseFile(char* filename) {
+	FILE* file;
+	if ((file=fopen(filename,"r"))==NULL) {
+		perror("File open failed");
+		return -1;
+	}
+	parseDevice(file);
+	fclose(file);
+	return 1;
+}
+
+void parseDevice(FILE* file) {
+	char buffer;
+	int state=STATE_NORMAL;
+	
+	int i=0;	
+	size=0; // (re)set size of devices_lists
+	
+	// use a finite automate to parse... must exist something simpler but that's all 
+	// I can think right now... sorry 
+	while ( (buffer=getc(file))!=EOF) {
+		switch(state) {
+			case STATE_NORMAL: // nothing is defined yet
+				switch(buffer) {
+					case 'N': state=STATE_NAME; // we enter a name
+						  break;
+					case 'H': state=STATE_HANDLER; // we enter a handler
+						  break;
+					case '\n': state=STATE_NEW; // possible new entry ?
+						  break;
+					default:  break;
+				}
+				break;
+			case STATE_NEW: // we are in a potential new device 
+				switch(buffer) {
+					case '\n': size++; // confirmed
+						   state=STATE_NORMAL;
+						   break;
+					case 'N': state=STATE_NAME; // no, we are in a name
+						  break;
+					case 'H': state=STATE_HANDLER; // in a handler
+						  break;
+					default: 
+						   state=STATE_NORMAL; // nothing, back to normal
+						   break;
+				}
+				break;
+			case STATE_NAME: // we are parsing a name
+				switch(buffer) {
+					case '=': state=STATE_NAME_COPY; // the name is here
+						  i=0;
+						  break;
+					case '\n': state=STATE_NORMAL; // finished, back to normal
+						  break;
+					default: break;
+				}
+				break;
+			case STATE_NAME_COPY:	// copy the name
+				switch(buffer) {
+					case '"' : // no need of this char
+						break;
+					case '\n': // finished copy
+						state=STATE_NORMAL;
+						devices_list[size].name[i]='\0';
+						break;
+					default: // copy
+						devices_list[size].name[i]=buffer;
+						i++;
+						break;				
+				}
+				break;
+			case STATE_HANDLER: // we are parsing a handler
+				switch(buffer) {
+					case '=': state=STATE_HANDLER_COPY; // the device starts here
+						  i=0;
+						  break;
+					case '\n': state=STATE_NORMAL; // finished handler ?
+						   break;
+					default:  break;
+				}
+				break;
+			case STATE_HANDLER_COPY: // copy the handler
+				switch(buffer) {
+					case '\n': // finished copy
+						state=STATE_NORMAL;
+						devices_list[size].entry[i]='\0';
+						break;
+					default: // do the copy
+						devices_list[size].entry[i]=buffer;
+						i++;
+						break;
+				}
+				break;
+			default: // should not arrive here...
+				fprintf(stderr,"error: unknow state: %d\n",state);
+				exit(-1);
+				break;
+		}
+		
+	}
+}
+
+// return event assoc with a name containing item
+int getItemEvent(char* item) {
+	int ret=-1;
+	int e;
+
+	if (!parseFile(DEVICE_FILE)) {
+		fprintf(stderr,"Error reading %s file\n",DEVICE_FILE);
+	}
+	else {
+		for (e=0;e<size;++e) {
+			if (strstr(devices_list[e].name,item)!=NULL) {
+				char* location;
+				if ( (location=strstr(devices_list[e].entry,"event"))!=NULL) {
+					if (sscanf(location,"event%d ",&ret)!=EOF) {
+						return ret;
+					}
+				}			
+			}
+		}
+	}
+	return ret;
+}
+
+/*int main() {
+	int e;
+	e=getItemEvent("keyboard");
+	printf("Event for keyboard: %d\n",e);
+	e=getItemEvent("Mouse");
+	printf("Event for mouse: %d\n",e);
+	e=getItemEvent("Glide");
+	printf("Event for glide: %d\n",e);
+}*/

Added: trunk/fsfn/src/autodev.h
===================================================================
--- trunk/fsfn/src/autodev.h	2005-11-27 03:20:13 UTC (rev 18)
+++ trunk/fsfn/src/autodev.h	2005-11-27 14:39:34 UTC (rev 19)
@@ -0,0 +1,32 @@
+/***************************************************************************
+ *   Copyright (C) 2005 by Poissinger Pierre   *
+ *   pierre.poissinger at gmail.com   *
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ *   This program is distributed in the hope that it will be useful,       *
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
+ *   GNU General Public License for more details.                          *
+ *                                                                         *
+ *   You should have received a copy of the GNU General Public License     *
+ *   along with this program; if not, write to the                         *
+ *   Free Software Foundation, Inc.,                                       *
+ *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
+ ***************************************************************************/
+#ifndef _AUTODEV_H_
+#define _AUTODEV_H_
+#include <config.h>
+
+// My keyboard name, always the same ???
+#define DEFAULT_KEYBOARD_NAME	"AT Translated Set 2 keyboard"
+
+// The only "usable" function for fsfn
+// return event assoc with name containing item
+int getItemEvent(char* item);
+
+#endif
+

Modified: trunk/fsfn/src/fsfn.c
===================================================================
--- trunk/fsfn/src/fsfn.c	2005-11-27 03:20:13 UTC (rev 18)
+++ trunk/fsfn/src/fsfn.c	2005-11-27 14:39:34 UTC (rev 19)
@@ -42,12 +42,16 @@
 // config
 #include "readconfig.h"
 
+// autodev
+#include "autodev.h"
+
 #ifdef HAVE_LIBXOSD
 #include "basicmsg.h"
 #include "osd.h"
 #endif
 
-static char devinput[255];
+#define MAX_DEVINPUT_SIZE	255
+static char devinput[MAX_DEVINPUT_SIZE];
 
 // Check and run possible config
 // ret 1 if something executed - 0 otherwise
@@ -103,16 +107,28 @@
   int flag = 0, brightness = 0, sound = 0;
   createqueue ();
 #endif
-
+  
+  if (strcasecmp(devinput,"AUTO")==0) { // try to figure out rigth event value for keyboard
+	  snprintf(devinput,MAX_DEVINPUT_SIZE,"/dev/input/event%d",getItemEvent(DEFAULT_KEYBOARD_NAME));
+	  syslog(LOG_INFO,"autodevice determines %s as keyboard event",devinput);
+  }
+  
   if ((fd = open (devinput, O_RDONLY)) < 0)
     {
       syslog (LOG_CRIT,"event interface (%s) open failed: %m",devinput);
+      // shoot auto as LAST chance
+      snprintf(devinput,MAX_DEVINPUT_SIZE,"/dev/input/event%d",getItemEvent(DEFAULT_KEYBOARD_NAME));
+      syslog(LOG_CRIT,"autodevice determines %s as a last chance keyboard event",devinput);
+      if ((fd = open (devinput, O_RDONLY)) < 0)
+        {
+	      syslog(LOG_CRIT,"Event interface (%s) open failed: %m",devinput);
 #ifdef HAVE_LIBXOSD
-      killqueue ();
+      	      killqueue ();
 #endif
-      releaseConfig();
-      closelog ();
-      exit (1);
+      	      releaseConfig();
+      	      closelog ();
+      	      exit (1);
+        }
     }
 
   /* handle important signal */



From muaddib at berlios.de  Sun Nov 27 16:32:32 2005
From: muaddib at berlios.de (muaddib at BerliOS)
Date: Sun, 27 Nov 2005 16:32:32 +0100
Subject: [Fsfn-svn] r20 - trunk/fsfn/gentoo
Message-ID: <200511271532.jARFWWO5030730@sheep.berlios.de>

Author: muaddib
Date: 2005-11-27 16:32:32 +0100 (Sun, 27 Nov 2005)
New Revision: 20

Modified:
   trunk/fsfn/gentoo/fsfn
Log:
Updated gentoo init script to include the use of logger


Modified: trunk/fsfn/gentoo/fsfn
===================================================================
--- trunk/fsfn/gentoo/fsfn	2005-11-27 14:39:34 UTC (rev 19)
+++ trunk/fsfn/gentoo/fsfn	2005-11-27 15:32:32 UTC (rev 20)
@@ -5,6 +5,7 @@
 
 depend() {
 	need localmount
+	use logger
 }
 
 checkconfig() {



From muaddib at berlios.de  Mon Nov 28 01:21:57 2005
From: muaddib at berlios.de (muaddib at BerliOS)
Date: Mon, 28 Nov 2005 01:21:57 +0100
Subject: [Fsfn-svn] r21 - in trunk/fsfn: etc src
Message-ID: <200511280021.jAS0LvlO027592@sheep.berlios.de>

Author: muaddib
Date: 2005-11-28 01:21:52 +0100 (Mon, 28 Nov 2005)
New Revision: 21

Modified:
   trunk/fsfn/etc/fsfn.conf
   trunk/fsfn/src/alsasound.c
   trunk/fsfn/src/generics.h
   trunk/fsfn/src/readconfig.c
Log:
Alsa control now got an config entry for the volume to set ('Front' by default - I read on a ubuntu forum someone got something else on his vaio (?misconfiguration?))  


Modified: trunk/fsfn/etc/fsfn.conf
===================================================================
--- trunk/fsfn/etc/fsfn.conf	2005-11-27 15:32:32 UTC (rev 20)
+++ trunk/fsfn/etc/fsfn.conf	2005-11-28 00:21:52 UTC (rev 21)
@@ -1,5 +1,6 @@
 # device
 #DEVICE=/dev/input/event1
+#ALSA_NAME=Front
 # osd looks
 #OSD_FONT=-*-lucida-*-*-*-*-24-*-*-*-*-*-iso8859-1
 #OSD_VCOLOR=green

Modified: trunk/fsfn/src/alsasound.c
===================================================================
--- trunk/fsfn/src/alsasound.c	2005-11-27 15:32:32 UTC (rev 20)
+++ trunk/fsfn/src/alsasound.c	2005-11-28 00:21:52 UTC (rev 21)
@@ -35,6 +35,8 @@
 #include <syslog.h>
 
 #include "alsasound.h"
+#include "generics.h"
+#include "readconfig.h"
 
 static char card[64] = "default";
 
@@ -94,7 +96,8 @@
 		/* load sid */
 		snd_mixer_selem_id_alloca(&sid);
 		snd_mixer_selem_id_set_index(sid, 0);
-		snd_mixer_selem_id_set_name(sid,"Front");
+		//snd_mixer_selem_id_set_name(sid,"Front");
+		snd_mixer_selem_id_set_name(sid,getConfig(CFG_ALSA_NAME));
 		
 		/* load elem */
 		elem = snd_mixer_find_selem(handle, sid);

Modified: trunk/fsfn/src/generics.h
===================================================================
--- trunk/fsfn/src/generics.h	2005-11-27 15:32:32 UTC (rev 20)
+++ trunk/fsfn/src/generics.h	2005-11-28 00:21:52 UTC (rev 21)
@@ -39,11 +39,11 @@
 #define MAX_CFG_LENGTH		255
 #define MAX_CFG_NAME_LENGTH 	20
 
-
 #define	 CFG_DEVICE		9000
 #define  CFG_OSDVCOLOR		9001
 #define  CFG_OSDBCOLOR		9002
 #define  CFG_OSDFONT		9003
+#define  CFG_ALSA_NAME		9004
 
 // The FS series seems to support 8 brightness levels
 #define MAX_BRIGHT 8

Modified: trunk/fsfn/src/readconfig.c
===================================================================
--- trunk/fsfn/src/readconfig.c	2005-11-27 15:32:32 UTC (rev 20)
+++ trunk/fsfn/src/readconfig.c	2005-11-28 00:21:52 UTC (rev 21)
@@ -50,7 +50,9 @@
 	char OSD_BCOLOR[MAX_CFG_LENGTH];
 	char OSD_FONT[MAX_CFG_LENGTH];
 	// device
-	char DEVICE[MAX_CFG_LENGTH];	
+	char DEVICE[MAX_CFG_LENGTH];
+	// alsa name
+	char ALSA_NAME[MAX_CFG_LENGTH];
 } config_list;
 
 config_list* UserConfig=NULL;
@@ -100,6 +102,10 @@
 		syslog(LOG_INFO,"OSD_FONT=%s",UserConfig->OSD_FONT);
 	}
 #endif
+	else if (strcasecmp(name,"ALSA_NAME")==0) {
+		strncpy(UserConfig->ALSA_NAME,value,MAX_CFG_LENGTH);
+		syslog(LOG_INFO,"ALSA_NAME=%s",UserConfig->ALSA_NAME);
+	}
 	else if (strcasecmp(name,"F2_CMD")==0) {
 		strncpy(UserConfig->F2_CMD,value,MAX_CFG_LENGTH);
 		syslog(LOG_INFO,"F2_CMD=%s",UserConfig->F2_CMD);
@@ -153,6 +159,7 @@
 void setDefConfig() 
   {
 	strncpy(UserConfig->DEVICE,"/dev/input/event0",MAX_CFG_LENGTH);
+	strncpy(UserConfig->ALSA_NAME,"Front",MAX_CFG_LENGTH);
 	strncpy(UserConfig->F12_CMD,"/bin/hibernate",MAX_CFG_LENGTH);
 	strncpy(UserConfig->OSD_VCOLOR,"red",MAX_CFG_LENGTH);
 	strncpy(UserConfig->OSD_BCOLOR,"blue",MAX_CFG_LENGTH);
@@ -246,6 +253,7 @@
 			case CFG_OSDVCOLOR: return UserConfig->OSD_VCOLOR;
 			case CFG_OSDBCOLOR: return UserConfig->OSD_BCOLOR;
 			case CFG_OSDFONT: return UserConfig->OSD_FONT;
+			case CFG_ALSA_NAME: return UserConfig->ALSA_NAME;
 			default: break;
 		}
 	}	



From muaddib at berlios.de  Mon Nov 28 03:22:57 2005
From: muaddib at berlios.de (muaddib at BerliOS)
Date: Mon, 28 Nov 2005 03:22:57 +0100
Subject: [Fsfn-svn] r22 - trunk/fsfn/src
Message-ID: <200511280222.jAS2MvKk002327@sheep.berlios.de>

Author: muaddib
Date: 2005-11-28 03:22:48 +0100 (Mon, 28 Nov 2005)
New Revision: 22

Modified:
   trunk/fsfn/src/fsfn.c
Log:
Added a "resume on failure" in fsfn device reading code
After resume, the error returned by the read is "device not found" --> added a check (before the error was seg fault...baaad baaad) and a shoot to the "auto determine device" if this error is spotted...
I added a sleep(10) aswell, too fast is not a good idea: At this place, it seems to solve a "no multipe resume bug"... (tried lots of different code - most of them give the right event but they fail to open it after the 2nd suspend...)

DISCLAIMER: For a "i don't really care right now" reason, I cannot do a full suspend but I experience the swapping events effect... so this need a little QA ;) [and a big fat greek code check...]


Modified: trunk/fsfn/src/fsfn.c
===================================================================
--- trunk/fsfn/src/fsfn.c	2005-11-28 00:21:52 UTC (rev 21)
+++ trunk/fsfn/src/fsfn.c	2005-11-28 02:22:48 UTC (rev 22)
@@ -25,6 +25,7 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+#include <errno.h>
 #include <unistd.h>
 #include <string.h>
 #include <fcntl.h>
@@ -53,6 +54,16 @@
 #define MAX_DEVINPUT_SIZE	255
 static char devinput[MAX_DEVINPUT_SIZE];
 
+// one way out
+void cleanExit(int ret) {
+#ifdef HAVE_LIBXOSD
+	killqueue ();
+#endif
+	releaseConfig();
+	closelog();
+	exit(ret);	
+}
+
 // Check and run possible config
 // ret 1 if something executed - 0 otherwise
 int checkConfig(int CONFIGCODE) 
@@ -81,13 +92,7 @@
 /* signal handler */
 void signal_handler(sig)
 {
-	// only needed to clean
-#ifdef HAVE_LIBXOSD
-	killqueue ();
-#endif
-	releaseConfig();
-	closelog();
-	exit(0);
+	cleanExit(EXIT_FAILURE);
 }
 
 void
@@ -122,25 +127,20 @@
       if ((fd = open (devinput, O_RDONLY)) < 0)
         {
 	      syslog(LOG_CRIT,"Event interface (%s) open failed: %m",devinput);
-#ifdef HAVE_LIBXOSD
-      	      killqueue ();
-#endif
-      	      releaseConfig();
-      	      closelog ();
-      	      exit (1);
-        }
+              cleanExit(EXIT_FAILURE);
+	}
     }
 
   /* handle important signal */
   if (signal(SIGTERM,signal_handler) < 0)
     {
       perror("signal");
-      exit(1);
+      exit(EXIT_FAILURE);
     }
   if (signal(SIGHUP,signal_handler) < 0)
     {
       perror("signal");
-      exit(1);
+      exit(EXIT_FAILURE);
     }
 
   syslog(LOG_INFO,"fsfn loaded");
@@ -153,19 +153,46 @@
       /*
        * read the event interface 
        */
-      read_bytes = read (fd, ev, sizeof (struct input_event) * 64);
+      if ( (read_bytes = read (fd, ev, sizeof (struct input_event) * 64))==-1) {
+	      //fprintf(stderr,"Error: %d\n",errno);
+	      if (errno==ENODEV) { // event is now invalid ? must be back from sleep...
+		      syslog(LOG_NOTICE,"Start sleeping...");
+		      sleep(10);		      
+		      syslog(LOG_NOTICE,"End sleeping...");
 
+		      close(fd); // is this needed ??
+		      
+		      syslog(LOG_NOTICE,"Input device changed, back from suspend ?: %m");
+		      
+		      // get new event
+		      snprintf(devinput,MAX_DEVINPUT_SIZE,"/dev/input/event%d",getItemEvent(DEFAULT_KEYBOARD_NAME));
+      		      syslog(LOG_NOTICE,"autodevice determines %s as new event",devinput);
+		      
+		      // reopen - seems to be problems after a hibernate :(
+      		      if ((fd = open (devinput, O_RDONLY)) < 0)
+        	        {
+				syslog(LOG_CRIT,"New event interface (%s) open failed: %m",devinput); 
+				cleanExit(EXIT_FAILURE);
+			}
+		      // read it
+		      if ((read_bytes = read (fd, ev, sizeof (struct input_event) * 64))==-1) 
+		        {
+				syslog(LOG_CRIT,"Reading new device (%s) failed: %m",devinput);
+				cleanExit(EXIT_FAILURE);
+		        }
+	      }
+	      else {
+		      syslog(LOG_CRIT,"Input device reading failed: %m");
+		      cleanExit(EXIT_FAILURE);
+	      }
+	}
+      	
       if (read_bytes < (int) sizeof (struct input_event))
 	{
 	  syslog (LOG_CRIT,"short read: %m");
-#ifdef HAVE_LIBXOSD
-	  killqueue ();
-#endif
-      	  releaseConfig();
-	  closelog ();
-	  exit (1);
+	  cleanExit(EXIT_FAILURE);
 	}
-
+      
       /*
        * Loop for all readed events until we have something
        * interesting.. 
@@ -178,7 +205,7 @@
 	    && (ev[i].code == FN_INPUT_CODE)
 	    && (ev[i].value == FN_INPUT_VALUE);
 	}
-
+      
       /*
        * If we got a FN event, plz do something... 
        */
@@ -332,11 +359,11 @@
       
       if ((pidfile=open(PID_FILE,O_RDWR|O_CREAT,0640))<0) {
       	syslog(LOG_CRIT,"Failed to create pid file: %m");
-	exit(-1);
+	exit(EXIT_FAILURE);
       }
       if (lockf(pidfile,F_TLOCK,0)<0) {
 	      syslog(LOG_CRIT,"Failed to lock pid file: %m");
-	      exit(-1); /* can not lock */
+	      exit(EXIT_FAILURE); /* can not lock */
       }
       sprintf(str,"%d\n",getpid());
       write(pidfile,str,strlen(str)); /* record pid to lockfile */
@@ -345,7 +372,7 @@
       break;
     case -1:
       perror ("Failed to deamonize");
-      exit (-1);
+      exit (EXIT_FAILURE);
     default:
       break;
     }



From muaddib at berlios.de  Tue Nov 29 01:34:26 2005
From: muaddib at berlios.de (muaddib at BerliOS)
Date: Tue, 29 Nov 2005 01:34:26 +0100
Subject: [Fsfn-svn] r23 - in trunk/fsfn: . man src
Message-ID: <200511290034.jAT0YQLr024275@sheep.berlios.de>

Author: muaddib
Date: 2005-11-29 01:34:14 +0100 (Tue, 29 Nov 2005)
New Revision: 23

Added:
   trunk/fsfn/acinclude.m4
   trunk/fsfn/man/Makefile.am
   trunk/fsfn/man/Makefile.in
Removed:
   trunk/fsfn/fsfn.kdevelop.pcs
   trunk/fsfn/fsfn.kdevses
Modified:
   trunk/fsfn/Makefile.am
   trunk/fsfn/Makefile.in
   trunk/fsfn/aclocal.m4
   trunk/fsfn/configure
   trunk/fsfn/configure.in
   trunk/fsfn/man/fsfn.5
   trunk/fsfn/src/Makefile.in
Log:
Added acinclude.m4 to avoid problems with lost .m4
Added dependencies to gentoo, ubuntu and etc subdirs (not included by 'make dist' before)
Updated section 5 man to include last config additions
Deleted kdevelop thing... if someone use them... put them back :)
Added mans pages to 'build/install' script
Bump version to 0.4-svn, just to not gen old version with new contents


Modified: trunk/fsfn/Makefile.am
===================================================================
--- trunk/fsfn/Makefile.am	2005-11-28 02:22:48 UTC (rev 22)
+++ trunk/fsfn/Makefile.am	2005-11-29 00:34:14 UTC (rev 23)
@@ -1,6 +1,7 @@
 
 ## Process this file with automake to produce Makefile.in
 
-SUBDIRS      = src
+SUBDIRS      = src man
+EXTRA_DIST = gentoo/fsfn debian/fsfn etc/fsfn.conf
 
 ## Makefile.am ends here

Modified: trunk/fsfn/Makefile.in
===================================================================
--- trunk/fsfn/Makefile.in	2005-11-28 02:22:48 UTC (rev 22)
+++ trunk/fsfn/Makefile.in	2005-11-29 00:34:14 UTC (rev 23)
@@ -40,9 +40,7 @@
 	TODO config.guess config.sub depcomp install-sh ltmain.sh \
 	missing mkinstalldirs
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/aclocal/alsa.m4 \
-	$(top_srcdir)/aclocal/libxosd.m4 \
-	$(top_srcdir)/aclocal/libxosd_version.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.in
 am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
 	$(ACLOCAL_M4)
@@ -149,7 +147,8 @@
 sharedstatedir = @sharedstatedir@
 sysconfdir = @sysconfdir@
 target_alias = @target_alias@
-SUBDIRS = src
+SUBDIRS = src man
+EXTRA_DIST = gentoo/fsfn debian/fsfn etc/fsfn.conf
 all: config.h
 	$(MAKE) $(AM_MAKEFLAGS) all-recursive
 
@@ -341,7 +340,7 @@
 distdir: $(DISTFILES)
 	$(am__remove_distdir)
 	mkdir $(distdir)
-	$(mkdir_p) $(distdir)/aclocal
+	$(mkdir_p) $(distdir)/debian $(distdir)/etc $(distdir)/gentoo
 	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
 	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
 	list='$(DISTFILES)'; for file in $$list; do \

Added: trunk/fsfn/acinclude.m4
===================================================================
--- trunk/fsfn/acinclude.m4	2005-11-28 02:22:48 UTC (rev 22)
+++ trunk/fsfn/acinclude.m4	2005-11-29 00:34:14 UTC (rev 23)
@@ -0,0 +1,848 @@
+dnl Configure Paths for Alsa
+dnl Some modifications by Richard Boulton <richard-alsa at tartarus.org>
+dnl Christopher Lansdown <lansdoct at cs.alfred.edu>
+dnl Jaroslav Kysela <perex at suse.cz>
+dnl Last modification: alsa.m4,v 1.24 2004/09/15 18:48:07 tiwai Exp
+dnl AM_PATH_ALSA([MINIMUM-VERSION [, ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]]])
+dnl Test for libasound, and define ALSA_CFLAGS and ALSA_LIBS as appropriate.
+dnl enables arguments --with-alsa-prefix=
+dnl                   --with-alsa-enc-prefix=
+dnl                   --disable-alsatest
+dnl
+dnl For backwards compatibility, if ACTION_IF_NOT_FOUND is not specified,
+dnl and the alsa libraries are not found, a fatal AC_MSG_ERROR() will result.
+dnl
+AC_DEFUN([AM_PATH_ALSA],
+[dnl Save the original CFLAGS, LDFLAGS, and LIBS
+alsa_save_CFLAGS="$CFLAGS"
+alsa_save_LDFLAGS="$LDFLAGS"
+alsa_save_LIBS="$LIBS"
+alsa_found=yes
+
+dnl
+dnl Get the cflags and libraries for alsa
+dnl
+AC_ARG_WITH(alsa-prefix,
+[  --with-alsa-prefix=PFX  Prefix where Alsa library is installed(optional)],
+[alsa_prefix="$withval"], [alsa_prefix=""])
+
+AC_ARG_WITH(alsa-inc-prefix,
+[  --with-alsa-inc-prefix=PFX  Prefix where include libraries are (optional)],
+[alsa_inc_prefix="$withval"], [alsa_inc_prefix=""])
+
+dnl FIXME: this is not yet implemented
+AC_ARG_ENABLE(alsatest,
+[  --disable-alsatest      Do not try to compile and run a test Alsa program],
+[enable_alsatest="$enableval"],
+[enable_alsatest=yes])
+
+dnl Add any special include directories
+AC_MSG_CHECKING(for ALSA CFLAGS)
+if test "$alsa_inc_prefix" != "" ; then
+	ALSA_CFLAGS="$ALSA_CFLAGS -I$alsa_inc_prefix"
+	CFLAGS="$CFLAGS -I$alsa_inc_prefix"
+fi
+AC_MSG_RESULT($ALSA_CFLAGS)
+
+dnl add any special lib dirs
+AC_MSG_CHECKING(for ALSA LDFLAGS)
+if test "$alsa_prefix" != "" ; then
+	ALSA_LIBS="$ALSA_LIBS -L$alsa_prefix"
+	LDFLAGS="$LDFLAGS $ALSA_LIBS"
+fi
+
+dnl add the alsa library
+ALSA_LIBS="$ALSA_LIBS -lasound -lm -ldl -lpthread"
+LIBS="$ALSA_LIBS $LIBS"
+AC_MSG_RESULT($ALSA_LIBS)
+
+dnl Check for a working version of libasound that is of the right version.
+min_alsa_version=ifelse([$1], ,0.1.1,$1)
+AC_MSG_CHECKING(for libasound headers version >= $min_alsa_version)
+no_alsa=""
+    alsa_min_major_version=`echo $min_alsa_version | \
+           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
+    alsa_min_minor_version=`echo $min_alsa_version | \
+           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
+    alsa_min_micro_version=`echo $min_alsa_version | \
+           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
+
+AC_LANG_SAVE
+AC_LANG_C
+AC_TRY_COMPILE([
+#include <alsa/asoundlib.h>
+], [
+/* ensure backward compatibility */
+#if !defined(SND_LIB_MAJOR) && defined(SOUNDLIB_VERSION_MAJOR)
+#define SND_LIB_MAJOR SOUNDLIB_VERSION_MAJOR
+#endif
+#if !defined(SND_LIB_MINOR) && defined(SOUNDLIB_VERSION_MINOR)
+#define SND_LIB_MINOR SOUNDLIB_VERSION_MINOR
+#endif
+#if !defined(SND_LIB_SUBMINOR) && defined(SOUNDLIB_VERSION_SUBMINOR)
+#define SND_LIB_SUBMINOR SOUNDLIB_VERSION_SUBMINOR
+#endif
+
+#  if(SND_LIB_MAJOR > $alsa_min_major_version)
+  exit(0);
+#  else
+#    if(SND_LIB_MAJOR < $alsa_min_major_version)
+#       error not present
+#    endif
+
+#   if(SND_LIB_MINOR > $alsa_min_minor_version)
+  exit(0);
+#   else
+#     if(SND_LIB_MINOR < $alsa_min_minor_version)
+#          error not present
+#      endif
+
+#      if(SND_LIB_SUBMINOR < $alsa_min_micro_version)
+#        error not present
+#      endif
+#    endif
+#  endif
+exit(0);
+],
+  [AC_MSG_RESULT(found.)],
+  [AC_MSG_RESULT(not present.)
+   ifelse([$3], , [AC_MSG_ERROR(Sufficiently new version of libasound not found.)])
+   alsa_found=no]
+)
+AC_LANG_RESTORE
+
+dnl Now that we know that we have the right version, let's see if we have the library and not just the headers.
+if test "x$enable_alsatest" = "xyes"; then
+AC_CHECK_LIB([asound], [snd_ctl_open],,
+	[ifelse([$3], , [AC_MSG_ERROR(No linkable libasound was found.)])
+	 alsa_found=no]
+)
+fi
+
+if test "x$alsa_found" = "xyes" ; then
+   ifelse([$2], , :, [$2])
+   LIBS=`echo $LIBS | sed 's/-lasound//g'`
+   LIBS=`echo $LIBS | sed 's/  //'`
+   LIBS="-lasound $LIBS"
+fi
+if test "x$alsa_found" = "xno" ; then
+   ifelse([$3], , :, [$3])
+   CFLAGS="$alsa_save_CFLAGS"
+   LDFLAGS="$alsa_save_LDFLAGS"
+   LIBS="$alsa_save_LIBS"
+   ALSA_CFLAGS=""
+   ALSA_LIBS=""
+fi
+
+dnl That should be it.  Now just export out symbols:
+AC_SUBST(ALSA_CFLAGS)
+AC_SUBST(ALSA_LIBS)
+])
+
+#serial AM1
+
+dnl From Bruno Haible.
+
+AC_DEFUN([AM_LANGINFO_CODESET],
+[
+  AC_CACHE_CHECK([for nl_langinfo and CODESET], am_cv_langinfo_codeset,
+    [AC_TRY_LINK([#include <langinfo.h>],
+      [char* cs = nl_langinfo(CODESET);],
+      am_cv_langinfo_codeset=yes,
+      am_cv_langinfo_codeset=no)
+    ])
+  if test $am_cv_langinfo_codeset = yes; then
+    AC_DEFINE(HAVE_LANGINFO_CODESET, 1,
+      [Define if you have <langinfo.h> and nl_langinfo(CODESET).])
+  fi
+])
+# Macro to add for using GNU gettext.
+# Ulrich Drepper <drepper at cygnus.com>, 1995.
+#
+# This file can be copied and used freely without restrictions.  It can
+# be used in projects which are not available under the GNU General Public
+# License or the GNU Library General Public License but which still want
+# to provide support for the GNU gettext functionality.
+# Please note that the actual code of the GNU gettext library is covered
+# by the GNU Library General Public License, and the rest of the GNU
+# gettext package package is covered by the GNU General Public License.
+# They are *not* in the public domain.
+
+# serial 10
+
+dnl Usage: AM_WITH_NLS([TOOLSYMBOL], [NEEDSYMBOL], [LIBDIR]).
+dnl If TOOLSYMBOL is specified and is 'use-libtool', then a libtool library
+dnl    $(top_builddir)/intl/libintl.la will be created (shared and/or static,
+dnl    depending on --{enable,disable}-{shared,static} and on the presence of
+dnl    AM-DISABLE-SHARED). Otherwise, a static library
+dnl    $(top_builddir)/intl/libintl.a will be created.
+dnl If NEEDSYMBOL is specified and is 'need-ngettext', then GNU gettext
+dnl    implementations (in libc or libintl) without the ngettext() function
+dnl    will be ignored.
+dnl LIBDIR is used to find the intl libraries.  If empty,
+dnl    the value `$(top_builddir)/intl/' is used.
+dnl
+dnl The result of the configuration is one of three cases:
+dnl 1) GNU gettext, as included in the intl subdirectory, will be compiled
+dnl    and used.
+dnl    Catalog format: GNU --> install in $(datadir)
+dnl    Catalog extension: .mo after installation, .gmo in source tree
+dnl 2) GNU gettext has been found in the system's C library.
+dnl    Catalog format: GNU --> install in $(datadir)
+dnl    Catalog extension: .mo after installation, .gmo in source tree
+dnl 3) No internationalization, always use English msgid.
+dnl    Catalog format: none
+dnl    Catalog extension: none
+dnl The use of .gmo is historical (it was needed to avoid overwriting the
+dnl GNU format catalogs when building on a platform with an X/Open gettext),
+dnl but we keep it in order not to force irrelevant filename changes on the
+dnl maintainers.
+dnl
+AC_DEFUN([AM_WITH_NLS],
+  [AC_MSG_CHECKING([whether NLS is requested])
+    dnl Default is enabled NLS
+    AC_ARG_ENABLE(nls,
+      [  --disable-nls           do not use Native Language Support],
+      USE_NLS=$enableval, USE_NLS=yes)
+    AC_MSG_RESULT($USE_NLS)
+    AC_SUBST(USE_NLS)
+
+    BUILD_INCLUDED_LIBINTL=no
+    USE_INCLUDED_LIBINTL=no
+    INTLLIBS=
+
+    dnl If we use NLS figure out what method
+    if test "$USE_NLS" = "yes"; then
+      AC_DEFINE(ENABLE_NLS, 1,
+        [Define to 1 if translation of program messages to the user's native language
+   is requested.])
+      AC_MSG_CHECKING([whether included gettext is requested])
+      AC_ARG_WITH(included-gettext,
+        [  --with-included-gettext use the GNU gettext library included here],
+        nls_cv_force_use_gnu_gettext=$withval,
+        nls_cv_force_use_gnu_gettext=no)
+      AC_MSG_RESULT($nls_cv_force_use_gnu_gettext)
+
+      nls_cv_use_gnu_gettext="$nls_cv_force_use_gnu_gettext"
+      if test "$nls_cv_force_use_gnu_gettext" != "yes"; then
+        dnl User does not insist on using GNU NLS library.  Figure out what
+        dnl to use.  If GNU gettext is available we use this.  Else we have
+        dnl to fall back to GNU NLS library.
+	CATOBJEXT=NONE
+
+        dnl Add a version number to the cache macros.
+        define(gt_cv_func_gnugettext_libc, [gt_cv_func_gnugettext]ifelse([$2], need-ngettext, 2, 1)[_libc])
+        define(gt_cv_func_gnugettext_libintl, [gt_cv_func_gnugettext]ifelse([$2], need-ngettext, 2, 1)[_libintl])
+
+	AC_CHECK_HEADER(libintl.h,
+	  [AC_CACHE_CHECK([for GNU gettext in libc], gt_cv_func_gnugettext_libc,
+	    [AC_TRY_LINK([#include <libintl.h>
+extern int _nl_msg_cat_cntr;],
+	       [bindtextdomain ("", "");
+return (int) gettext ("")]ifelse([$2], need-ngettext, [ + (int) ngettext ("", "", 0)], [])[ + _nl_msg_cat_cntr],
+	       gt_cv_func_gnugettext_libc=yes,
+	       gt_cv_func_gnugettext_libc=no)])
+
+	   if test "$gt_cv_func_gnugettext_libc" != "yes"; then
+	     AC_CACHE_CHECK([for GNU gettext in libintl],
+	       gt_cv_func_gnugettext_libintl,
+	       [gt_save_LIBS="$LIBS"
+		LIBS="$LIBS -lintl $LIBICONV"
+		AC_TRY_LINK([#include <libintl.h>
+extern int _nl_msg_cat_cntr;],
+		  [bindtextdomain ("", "");
+return (int) gettext ("")]ifelse([$2], need-ngettext, [ + (int) ngettext ("", "", 0)], [])[ + _nl_msg_cat_cntr],
+		  gt_cv_func_gnugettext_libintl=yes,
+		  gt_cv_func_gnugettext_libintl=no)
+		LIBS="$gt_save_LIBS"])
+	   fi
+
+	   dnl If an already present or preinstalled GNU gettext() is found,
+	   dnl use it.  But if this macro is used in GNU gettext, and GNU
+	   dnl gettext is already preinstalled in libintl, we update this
+	   dnl libintl.  (Cf. the install rule in intl/Makefile.in.)
+	   if test "$gt_cv_func_gnugettext_libc" = "yes" \
+	      || { test "$gt_cv_func_gnugettext_libintl" = "yes" \
+		   && test "$PACKAGE" != gettext; }; then
+	     AC_DEFINE(HAVE_GETTEXT, 1,
+               [Define if the GNU gettext() function is already present or preinstalled.])
+
+	     if test "$gt_cv_func_gnugettext_libintl" = "yes"; then
+	       dnl If iconv() is in a separate libiconv library, then anyone
+	       dnl linking with libintl{.a,.so} also needs to link with
+	       dnl libiconv.
+	       INTLLIBS="-lintl $LIBICONV"
+	     fi
+
+	     gt_save_LIBS="$LIBS"
+	     LIBS="$LIBS $INTLLIBS"
+	     AC_CHECK_FUNCS(dcgettext)
+	     LIBS="$gt_save_LIBS"
+
+	     dnl Search for GNU msgfmt in the PATH.
+	     AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,
+	       [$ac_dir/$ac_word --statistics /dev/null >/dev/null 2>&1], :)
+	     AC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)
+
+	     dnl Search for GNU xgettext in the PATH.
+	     AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,
+	       [$ac_dir/$ac_word --omit-header /dev/null >/dev/null 2>&1], :)
+
+	     CATOBJEXT=.gmo
+	   fi
+	])
+
+        if test "$CATOBJEXT" = "NONE"; then
+	  dnl GNU gettext is not found in the C library.
+	  dnl Fall back on GNU gettext library.
+	  nls_cv_use_gnu_gettext=yes
+        fi
+      fi
+
+      if test "$nls_cv_use_gnu_gettext" = "yes"; then
+        dnl Mark actions used to generate GNU NLS library.
+        INTLOBJS="\$(GETTOBJS)"
+        AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,
+	  [$ac_dir/$ac_word --statistics /dev/null >/dev/null 2>&1], :)
+        AC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)
+        AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,
+	  [$ac_dir/$ac_word --omit-header /dev/null >/dev/null 2>&1], :)
+        AC_SUBST(MSGFMT)
+	BUILD_INCLUDED_LIBINTL=yes
+	USE_INCLUDED_LIBINTL=yes
+        CATOBJEXT=.gmo
+	INTLLIBS="ifelse([$3],[],\$(top_builddir)/intl,[$3])/libintl.ifelse([$1], use-libtool, [l], [])a $LIBICONV"
+	LIBS=`echo " $LIBS " | sed -e 's/ -lintl / /' -e 's/^ //' -e 's/ $//'`
+      fi
+
+      dnl This could go away some day; the PATH_PROG_WITH_TEST already does it.
+      dnl Test whether we really found GNU msgfmt.
+      if test "$GMSGFMT" != ":"; then
+	dnl If it is no GNU msgfmt we define it as : so that the
+	dnl Makefiles still can work.
+	if $GMSGFMT --statistics /dev/null >/dev/null 2>&1; then
+	  : ;
+	else
+	  AC_MSG_RESULT(
+	    [found msgfmt program is not GNU msgfmt; ignore it])
+	  GMSGFMT=":"
+	fi
+      fi
+
+      dnl This could go away some day; the PATH_PROG_WITH_TEST already does it.
+      dnl Test whether we really found GNU xgettext.
+      if test "$XGETTEXT" != ":"; then
+	dnl If it is no GNU xgettext we define it as : so that the
+	dnl Makefiles still can work.
+	if $XGETTEXT --omit-header /dev/null >/dev/null 2>&1; then
+	  : ;
+	else
+	  AC_MSG_RESULT(
+	    [found xgettext program is not GNU xgettext; ignore it])
+	  XGETTEXT=":"
+	fi
+      fi
+
+      dnl We need to process the po/ directory.
+      POSUB=po
+    fi
+    AC_OUTPUT_COMMANDS(
+     [for ac_file in $CONFIG_FILES; do
+        # Support "outfile[:infile[:infile...]]"
+        case "$ac_file" in
+          *:*) ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
+        esac
+        # PO directories have a Makefile.in generated from Makefile.in.in.
+        case "$ac_file" in */Makefile.in)
+          # Adjust a relative srcdir.
+          ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
+          ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
+          ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
+          # In autoconf-2.13 it is called $ac_given_srcdir.
+          # In autoconf-2.50 it is called $srcdir.
+          test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
+          case "$ac_given_srcdir" in
+            .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
+            /*) top_srcdir="$ac_given_srcdir" ;;
+            *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
+          esac
+          if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
+            rm -f "$ac_dir/POTFILES"
+            test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
+            sed -e "/^#/d" -e "/^[ 	]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," -e "\$s/\(.*\) \\\\/\1/" < "$ac_given_srcdir/$ac_dir/POTFILES.in" > "$ac_dir/POTFILES"
+            test -n "$as_me" && echo "$as_me: creating $ac_dir/Makefile" || echo "creating $ac_dir/Makefile"
+            sed -e "/POTFILES =/r $ac_dir/POTFILES" "$ac_dir/Makefile.in" > "$ac_dir/Makefile"
+          fi
+          ;;
+        esac
+      done])
+
+
+    dnl If this is used in GNU gettext we have to set BUILD_INCLUDED_LIBINTL
+    dnl to 'yes' because some of the testsuite requires it.
+    if test "$PACKAGE" = gettext; then
+      BUILD_INCLUDED_LIBINTL=yes
+    fi
+
+    dnl intl/plural.c is generated from intl/plural.y. It requires bison,
+    dnl because plural.y uses bison specific features. It requires at least
+    dnl bison-1.26 because earlier versions generate a plural.c that doesn't
+    dnl compile.
+    dnl bison is only needed for the maintainer (who touches plural.y). But in
+    dnl order to avoid separate Makefiles or --enable-maintainer-mode, we put
+    dnl the rule in general Makefile. Now, some people carelessly touch the
+    dnl files or have a broken "make" program, hence the plural.c rule will
+    dnl sometimes fire. To avoid an error, defines BISON to ":" if it is not
+    dnl present or too old.
+    AC_CHECK_PROGS([INTLBISON], [bison])
+    if test -z "$INTLBISON"; then
+      ac_verc_fail=yes
+    else
+      dnl Found it, now check the version.
+      AC_MSG_CHECKING([version of bison])
+changequote(<<,>>)dnl
+      ac_prog_version=`$INTLBISON --version 2>&1 | sed -n 's/^.*GNU Bison.* \([0-9]*\.[0-9.]*\).*$/\1/p'`
+      case $ac_prog_version in
+        '') ac_prog_version="v. ?.??, bad"; ac_verc_fail=yes;;
+        1.2[6-9]* | 1.[3-9][0-9]* | [2-9].*)
+changequote([,])dnl
+           ac_prog_version="$ac_prog_version, ok"; ac_verc_fail=no;;
+        *) ac_prog_version="$ac_prog_version, bad"; ac_verc_fail=yes;;
+      esac
+      AC_MSG_RESULT([$ac_prog_version])
+    fi
+    if test $ac_verc_fail = yes; then
+      INTLBISON=:
+    fi
+
+    dnl These rules are solely for the distribution goal.  While doing this
+    dnl we only have to keep exactly one list of the available catalogs
+    dnl in configure.in.
+    for lang in $ALL_LINGUAS; do
+      GMOFILES="$GMOFILES $lang.gmo"
+      POFILES="$POFILES $lang.po"
+    done
+
+    dnl Make all variables we use known to autoconf.
+    AC_SUBST(BUILD_INCLUDED_LIBINTL)
+    AC_SUBST(USE_INCLUDED_LIBINTL)
+    AC_SUBST(CATALOGS)
+    AC_SUBST(CATOBJEXT)
+    AC_SUBST(GMOFILES)
+    AC_SUBST(INTLLIBS)
+    AC_SUBST(INTLOBJS)
+    AC_SUBST(POFILES)
+    AC_SUBST(POSUB)
+
+    dnl For backward compatibility. Some configure.ins may be using this.
+    nls_cv_header_intl=
+    nls_cv_header_libgt=
+
+    dnl For backward compatibility. Some Makefiles may be using this.
+    DATADIRNAME=share
+    AC_SUBST(DATADIRNAME)
+
+    dnl For backward compatibility. Some Makefiles may be using this.
+    INSTOBJEXT=.mo
+    AC_SUBST(INSTOBJEXT)
+
+    dnl For backward compatibility. Some Makefiles may be using this.
+    GENCAT=gencat
+    AC_SUBST(GENCAT)
+  ])
+
+dnl Usage: Just like AM_WITH_NLS, which see.
+AC_DEFUN([AM_GNU_GETTEXT],
+  [AC_REQUIRE([AC_PROG_MAKE_SET])dnl
+   AC_REQUIRE([AC_PROG_CC])dnl
+   AC_REQUIRE([AC_CANONICAL_HOST])dnl
+   AC_REQUIRE([AC_PROG_RANLIB])dnl
+   AC_REQUIRE([AC_ISC_POSIX])dnl
+   AC_REQUIRE([AC_HEADER_STDC])dnl
+   AC_REQUIRE([AC_C_CONST])dnl
+   AC_REQUIRE([AC_C_INLINE])dnl
+   AC_REQUIRE([AC_TYPE_OFF_T])dnl
+   AC_REQUIRE([AC_TYPE_SIZE_T])dnl
+   AC_REQUIRE([AC_FUNC_ALLOCA])dnl
+   AC_REQUIRE([AC_FUNC_MMAP])dnl
+   AC_REQUIRE([jm_GLIBC21])dnl
+
+   AC_CHECK_HEADERS([argz.h limits.h locale.h nl_types.h malloc.h stddef.h \
+stdlib.h string.h unistd.h sys/param.h])
+   AC_CHECK_FUNCS([feof_unlocked fgets_unlocked getcwd getegid geteuid \
+getgid getuid mempcpy munmap putenv setenv setlocale stpcpy strchr strcasecmp \
+strdup strtoul tsearch __argz_count __argz_stringify __argz_next])
+
+   AM_ICONV
+   AM_LANGINFO_CODESET
+   AM_LC_MESSAGES
+   AM_WITH_NLS([$1],[$2],[$3])
+
+   if test "x$CATOBJEXT" != "x"; then
+     if test "x$ALL_LINGUAS" = "x"; then
+       LINGUAS=
+     else
+       AC_MSG_CHECKING(for catalogs to be installed)
+       NEW_LINGUAS=
+       for presentlang in $ALL_LINGUAS; do
+         useit=no
+         for desiredlang in ${LINGUAS-$ALL_LINGUAS}; do
+           # Use the presentlang catalog if desiredlang is
+           #   a. equal to presentlang, or
+           #   b. a variant of presentlang (because in this case,
+           #      presentlang can be used as a fallback for messages
+           #      which are not translated in the desiredlang catalog).
+           case "$desiredlang" in
+             "$presentlang"*) useit=yes;;
+           esac
+         done
+         if test $useit = yes; then
+           NEW_LINGUAS="$NEW_LINGUAS $presentlang"
+         fi
+       done
+       LINGUAS=$NEW_LINGUAS
+       AC_MSG_RESULT($LINGUAS)
+     fi
+
+     dnl Construct list of names of catalog files to be constructed.
+     if test -n "$LINGUAS"; then
+       for lang in $LINGUAS; do CATALOGS="$CATALOGS $lang$CATOBJEXT"; done
+     fi
+   fi
+
+   dnl If the AC_CONFIG_AUX_DIR macro for autoconf is used we possibly
+   dnl find the mkinstalldirs script in another subdir but $(top_srcdir).
+   dnl Try to locate is.
+   MKINSTALLDIRS=
+   if test -n "$ac_aux_dir"; then
+     MKINSTALLDIRS="$ac_aux_dir/mkinstalldirs"
+   fi
+   if test -z "$MKINSTALLDIRS"; then
+     MKINSTALLDIRS="\$(top_srcdir)/mkinstalldirs"
+   fi
+   AC_SUBST(MKINSTALLDIRS)
+
+   dnl Enable libtool support if the surrounding package wishes it.
+   INTL_LIBTOOL_SUFFIX_PREFIX=ifelse([$1], use-libtool, [l], [])
+   AC_SUBST(INTL_LIBTOOL_SUFFIX_PREFIX)
+  ])
+#serial 2
+
+# Test for the GNU C Library, version 2.1 or newer.
+# From Bruno Haible.
+
+AC_DEFUN([jm_GLIBC21],
+  [
+    AC_CACHE_CHECK(whether we are using the GNU C Library 2.1 or newer,
+      ac_cv_gnu_library_2_1,
+      [AC_EGREP_CPP([Lucky GNU user],
+	[
+#include <features.h>
+#ifdef __GNU_LIBRARY__
+ #if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 1) || (__GLIBC__ > 2)
+  Lucky GNU user
+ #endif
+#endif
+	],
+	ac_cv_gnu_library_2_1=yes,
+	ac_cv_gnu_library_2_1=no)
+      ]
+    )
+    AC_SUBST(GLIBC21)
+    GLIBC21="$ac_cv_gnu_library_2_1"
+  ]
+)
+#serial AM2
+
+dnl From Bruno Haible.
+
+AC_DEFUN([AM_ICONV],
+[
+  dnl Some systems have iconv in libc, some have it in libiconv (OSF/1 and
+  dnl those with the standalone portable GNU libiconv installed).
+
+  AC_ARG_WITH([libiconv-prefix],
+[  --with-libiconv-prefix=DIR  search for libiconv in DIR/include and DIR/lib], [
+    for dir in `echo "$withval" | tr : ' '`; do
+      if test -d $dir/include; then CPPFLAGS="$CPPFLAGS -I$dir/include"; fi
+      if test -d $dir/lib; then LDFLAGS="$LDFLAGS -L$dir/lib"; fi
+    done
+   ])
+
+  AC_CACHE_CHECK(for iconv, am_cv_func_iconv, [
+    am_cv_func_iconv="no, consider installing GNU libiconv"
+    am_cv_lib_iconv=no
+    AC_TRY_LINK([#include <stdlib.h>
+#include <iconv.h>],
+      [iconv_t cd = iconv_open("","");
+       iconv(cd,NULL,NULL,NULL,NULL);
+       iconv_close(cd);],
+      am_cv_func_iconv=yes)
+    if test "$am_cv_func_iconv" != yes; then
+      am_save_LIBS="$LIBS"
+      LIBS="$LIBS -liconv"
+      AC_TRY_LINK([#include <stdlib.h>
+#include <iconv.h>],
+        [iconv_t cd = iconv_open("","");
+         iconv(cd,NULL,NULL,NULL,NULL);
+         iconv_close(cd);],
+        am_cv_lib_iconv=yes
+        am_cv_func_iconv=yes)
+      LIBS="$am_save_LIBS"
+    fi
+  ])
+  if test "$am_cv_func_iconv" = yes; then
+    AC_DEFINE(HAVE_ICONV, 1, [Define if you have the iconv() function.])
+    AC_MSG_CHECKING([for iconv declaration])
+    AC_CACHE_VAL(am_cv_proto_iconv, [
+      AC_TRY_COMPILE([
+#include <stdlib.h>
+#include <iconv.h>
+extern
+#ifdef __cplusplus
+"C"
+#endif
+#if defined(__STDC__) || defined(__cplusplus)
+size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
+#else
+size_t iconv();
+#endif
+], [], am_cv_proto_iconv_arg1="", am_cv_proto_iconv_arg1="const")
+      am_cv_proto_iconv="extern size_t iconv (iconv_t cd, $am_cv_proto_iconv_arg1 char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);"])
+    am_cv_proto_iconv=`echo "[$]am_cv_proto_iconv" | tr -s ' ' | sed -e 's/( /(/'`
+    AC_MSG_RESULT([$]{ac_t:-
+         }[$]am_cv_proto_iconv)
+    AC_DEFINE_UNQUOTED(ICONV_CONST, $am_cv_proto_iconv_arg1,
+      [Define as const if the declaration of iconv() needs const.])
+  fi
+  LIBICONV=
+  if test "$am_cv_lib_iconv" = yes; then
+    LIBICONV="-liconv"
+  fi
+  AC_SUBST(LIBICONV)
+])
+#serial 1
+# This test replaces the one in autoconf.
+# Currently this macro should have the same name as the autoconf macro
+# because gettext's gettext.m4 (distributed in the automake package)
+# still uses it.  Otherwise, the use in gettext.m4 makes autoheader
+# give these diagnostics:
+#   configure.in:556: AC_TRY_COMPILE was called before AC_ISC_POSIX
+#   configure.in:556: AC_TRY_RUN was called before AC_ISC_POSIX
+
+undefine([AC_ISC_POSIX])
+
+AC_DEFUN([AC_ISC_POSIX],
+  [
+    dnl This test replaces the obsolescent AC_ISC_POSIX kludge.
+    AC_CHECK_LIB(cposix, strerror, [LIBS="$LIBS -lcposix"])
+  ]
+)
+# Check whether LC_MESSAGES is available in <locale.h>.
+# Ulrich Drepper <drepper at cygnus.com>, 1995.
+#
+# This file can be copied and used freely without restrictions.  It can
+# be used in projects which are not available under the GNU General Public
+# License or the GNU Library General Public License but which still want
+# to provide support for the GNU gettext functionality.
+# Please note that the actual code of the GNU gettext library is covered
+# by the GNU Library General Public License, and the rest of the GNU
+# gettext package package is covered by the GNU General Public License.
+# They are *not* in the public domain.
+
+# serial 2
+
+AC_DEFUN([AM_LC_MESSAGES],
+  [if test $ac_cv_header_locale_h = yes; then
+    AC_CACHE_CHECK([for LC_MESSAGES], am_cv_val_LC_MESSAGES,
+      [AC_TRY_LINK([#include <locale.h>], [return LC_MESSAGES],
+       am_cv_val_LC_MESSAGES=yes, am_cv_val_LC_MESSAGES=no)])
+    if test $am_cv_val_LC_MESSAGES = yes; then
+      AC_DEFINE(HAVE_LC_MESSAGES, 1,
+        [Define if your <locale.h> file defines LC_MESSAGES.])
+    fi
+  fi])
+# Oron Peled (Sun Jun 30 2002)
+# Taken from libglade.m4
+
+# a macro to get the libs/cflags for libxosd
+
+dnl AM_PATH_LIBXOSD([ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])
+dnl Test to see if libxosd is installed, and define LIBXOSD_CFLAGS, LIBXOSDLIBS
+dnl
+AC_DEFUN(AM_PATH_LIBXOSD,
+[dnl
+dnl Get the cflags and libraries from the xosd-config script
+dnl
+AC_ARG_WITH(xosd-config,
+[  --with-xosd-config=LIBXOSD_CONFIG  Location of xosd-config],
+LIBXOSD_CONFIG="$withval")
+
+AC_PATH_PROG(LIBXOSD_CONFIG, xosd-config, no)
+AC_MSG_CHECKING(for libxosd)
+if test "$LIBXOSD_CONFIG" = "no"; then
+  AC_MSG_RESULT(no)
+  ifelse([$2], , :, [$2])
+else
+  LIBXOSD_CFLAGS=`$LIBXOSD_CONFIG --cflags`
+  LIBXOSD_LIBS=`$LIBXOSD_CONFIG --libs`
+  AC_MSG_RESULT(yes)
+  ifelse([$1], , :, [$1])
+fi
+AC_SUBST(LIBXOSD_CFLAGS)
+AC_SUBST(LIBXOSD_LIBS)
+])
+dnl AM_CHECK_LIBXOSD
+dnl Checks for LIBXOSD (>= 1.0.0)
+AC_DEFUN(AM_CHECK_LIBXOSD,
+[
+  if test ! x$xosd_libdir = x; then
+      LIBS="$LIBS -L$xosd_libdir"
+  fi
+  if test ! x$xosd_incdir = x; then
+      CPPFLAGS="$CPPFLAGS -I$xosd_incdir"
+  fi
+
+  if test "x$enable_xosd" = "xyes"
+  then
+    dnl
+    dnl Check its version
+    dnl
+    AC_MSG_CHECKING(for version of libxosd)
+    CFLAGS="$CFLAGS $LIBXOSD_CFLAGS"
+    LIBS="$LIBS $LIBXOSD_LIBS"
+    dnl Check for version >= 2.2.0
+    AC_TRY_LINK(
+      [
+        #include <xosd.h>
+      ],
+      [
+        void test()
+        {
+          xosd* t = xosd_create(0);
+	  xosd_set_shadow_colour(t, "BLUE");
+        }
+      ],
+      [
+        AC_MSG_RESULT([>= 2.2.0, ok])
+        AC_DEFINE(HAVE_LIBXOSD_VERSION, 20200)
+      ],
+      [
+      dnl Check for version >= 2.0.0
+      AC_TRY_LINK(
+	[
+	  #include <xosd.h>
+	],
+	[
+	  void test()
+	  {
+	    xosd* t = xosd_create(0);
+	  }
+	],
+	[
+	  AC_MSG_RESULT([>= 2.0.0, ok])
+	  AC_DEFINE(HAVE_LIBXOSD_VERSION, 20000)
+	],
+	[
+	  dnl Check for version >= 1.0.0 and < 2.0.0
+	  AC_TRY_LINK(
+	    [
+	      #include <xosd.h>
+	    ],
+	    [
+	      void test()
+	      {
+		xosd* t = xosd_init("font", "colour", 0, XOSD_top, 0, 0, 0);
+	      }
+	    ],
+	    [
+	      AC_MSG_RESULT([>= 1.0.0, ok])
+	      AC_DEFINE(HAVE_LIBXOSD_VERSION, 10000)
+	    ],
+	    [
+	      dnl Check for version >= 0.7.0 and < 1.0.0
+	      dnl xosd < 1.0.0 has no xosd-config script. Lets hope, that is installed to the usual place.
+	      CFLAGS="$CFLAGS -g -O2 -I/usr/X11R6/include -I/usr/include"
+	      LIBS="$LIBS -L/usr/lib -L/usr/X11R6/lib -lxosd -lpthread -lXt -lXext -lX11 -lSM -lICE"
+	      AC_TRY_LINK(
+		[
+		  #include <xosd.h>
+		],
+		[
+		  void test()
+		  {
+		    xosd* t = xosd_init("font", "colour", 0, XOSD_top, 0, 0);
+		  }
+		],
+		[
+		  AC_MSG_RESULT([>= 0.7.0, ok])
+		  AC_DEFINE(HAVE_LIBXOSD, 1, [Defined to 1 if you have the xosd library])
+		  AC_DEFINE(HAVE_LIBXOSD_VERSION, 700, [Define to version number of the xosd library.
+		  Numbering scheme:   700 >= 0.7.0 ; 10000 >= 1.0.0 ; 20000 >= 2.0.0 ; 20200 >= 2.2.0])
+		],
+		[
+		  AC_MSG_RESULT([< 0.7.0, failed])
+		  echo "*** The version of XOSD library installed is not 0.7.0 or"
+		  echo "*** above, make sure the correct version is installed."
+		  exit 1
+		]
+	       )
+	    ]
+	   )
+	]
+      )
+    ]
+  )
+  fi
+])
+# Search path for a program which passes the given test.
+# Ulrich Drepper <drepper at cygnus.com>, 1996.
+#
+# This file can be copied and used freely without restrictions.  It can
+# be used in projects which are not available under the GNU General Public
+# License or the GNU Library General Public License but which still want
+# to provide support for the GNU gettext functionality.
+# Please note that the actual code of the GNU gettext library is covered
+# by the GNU Library General Public License, and the rest of the GNU
+# gettext package package is covered by the GNU General Public License.
+# They are *not* in the public domain.
+
+# serial 2
+
+dnl AM_PATH_PROG_WITH_TEST(VARIABLE, PROG-TO-CHECK-FOR,
+dnl   TEST-PERFORMED-ON-FOUND_PROGRAM [, VALUE-IF-NOT-FOUND [, PATH]])
+AC_DEFUN([AM_PATH_PROG_WITH_TEST],
+[# Extract the first word of "$2", so it can be a program name with args.
+set dummy $2; ac_word=[$]2
+AC_MSG_CHECKING([for $ac_word])
+AC_CACHE_VAL(ac_cv_path_$1,
+[case "[$]$1" in
+  /*)
+  ac_cv_path_$1="[$]$1" # Let the user override the test with a path.
+  ;;
+  *)
+  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS="${IFS}:"
+  for ac_dir in ifelse([$5], , $PATH, [$5]); do
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/$ac_word; then
+      if [$3]; then
+	ac_cv_path_$1="$ac_dir/$ac_word"
+	break
+      fi
+    fi
+  done
+  IFS="$ac_save_ifs"
+dnl If no 4th arg is given, leave the cache variable unset,
+dnl so AC_PATH_PROGS will keep looking.
+ifelse([$4], , , [  test -z "[$]ac_cv_path_$1" && ac_cv_path_$1="$4"
+])dnl
+  ;;
+esac])dnl
+$1="$ac_cv_path_$1"
+if test ifelse([$4], , [-n "[$]$1"], ["[$]$1" != "$4"]); then
+  AC_MSG_RESULT([$]$1)
+else
+  AC_MSG_RESULT(no)
+fi
+AC_SUBST($1)dnl
+])

Modified: trunk/fsfn/aclocal.m4
===================================================================
--- trunk/fsfn/aclocal.m4	2005-11-28 02:22:48 UTC (rev 22)
+++ trunk/fsfn/aclocal.m4	2005-11-29 00:34:14 UTC (rev 23)
@@ -848,6 +848,4 @@
 AC_SUBST([am__untar])
 ]) # _AM_PROG_TAR
 
-m4_include([aclocal/alsa.m4])
-m4_include([aclocal/libxosd.m4])
-m4_include([aclocal/libxosd_version.m4])
+m4_include([acinclude.m4])

Modified: trunk/fsfn/configure
===================================================================
--- trunk/fsfn/configure	2005-11-28 02:22:48 UTC (rev 22)
+++ trunk/fsfn/configure	2005-11-29 00:34:14 UTC (rev 23)
@@ -1615,7 +1615,7 @@
 
 # Define the identity of the package.
  PACKAGE=fsfn
- VERSION=0.3-r1
+ VERSION=0.4-svn
 
 
 cat >>confdefs.h <<_ACEOF
@@ -5123,7 +5123,7 @@
 
 fi
 
-                    ac_config_files="$ac_config_files Makefile src/Makefile"
+                              ac_config_files="$ac_config_files Makefile src/Makefile man/Makefile"
 
 cat >confcache <<\_ACEOF
 # This file is a shell script that caches the results of configure
@@ -5676,6 +5676,7 @@
   # Handling of arguments.
   "Makefile" ) CONFIG_FILES="$CONFIG_FILES Makefile" ;;
   "src/Makefile" ) CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
+  "man/Makefile" ) CONFIG_FILES="$CONFIG_FILES man/Makefile" ;;
   "depfiles" ) CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
   "config.h" ) CONFIG_HEADERS="$CONFIG_HEADERS config.h" ;;
   *) { { echo "$as_me:$LINENO: error: invalid argument: $ac_config_target" >&5

Modified: trunk/fsfn/configure.in
===================================================================
--- trunk/fsfn/configure.in	2005-11-28 02:22:48 UTC (rev 22)
+++ trunk/fsfn/configure.in	2005-11-29 00:34:14 UTC (rev 23)
@@ -2,7 +2,7 @@
 AC_CONFIG_SRCDIR([configure.in])
 
 AC_CONFIG_HEADERS([config.h])
-AM_INIT_AUTOMAKE(fsfn, 0.3-r1)
+AM_INIT_AUTOMAKE(fsfn, 0.4-svn)
 
 dnl osd 
 # additional options
@@ -36,5 +36,5 @@
   AM_CHECK_LIBXOSD
 fi
 
-AC_CONFIG_FILES([Makefile src/Makefile])
+AC_CONFIG_FILES([Makefile src/Makefile man/Makefile])
 AC_OUTPUT

Deleted: trunk/fsfn/fsfn.kdevelop.pcs
===================================================================
(Binary files differ)

Deleted: trunk/fsfn/fsfn.kdevses
===================================================================
--- trunk/fsfn/fsfn.kdevses	2005-11-28 02:22:48 UTC (rev 22)
+++ trunk/fsfn/fsfn.kdevses	2005-11-29 00:34:14 UTC (rev 23)
@@ -1,23 +0,0 @@
-<?xml version = '1.0' encoding = 'UTF-8'?>
-<!DOCTYPE KDevPrjSession>
-<KDevPrjSession>
- <DocsAndViews NumberOfDocuments="1" >
-  <Doc0 NumberOfViews="1" URL="file:///home/muaddib/dev/fsfn/trunk/fsfn/src/basicmsg.c" >
-   <View0 line="101" Type="Source" />
-  </Doc0>
- </DocsAndViews>
- <pluginList>
-  <kdevdebugger>
-   <breakpointList/>
-  </kdevdebugger>
-  <kdevbookmarks>
-   <bookmarks/>
-  </kdevbookmarks>
-  <kdevvalgrind>
-   <executable path="" params="" />
-   <valgrind path="" params="" />
-   <calltree path="" params="" />
-   <kcachegrind path="" />
-  </kdevvalgrind>
- </pluginList>
-</KDevPrjSession>

Added: trunk/fsfn/man/Makefile.am
===================================================================
--- trunk/fsfn/man/Makefile.am	2005-11-28 02:22:48 UTC (rev 22)
+++ trunk/fsfn/man/Makefile.am	2005-11-29 00:34:14 UTC (rev 23)
@@ -0,0 +1,2 @@
+man_MANS = fsfn.1 fsfn.5
+EXTRA_DIST= $(man_MANS)

Added: trunk/fsfn/man/Makefile.in
===================================================================
--- trunk/fsfn/man/Makefile.in	2005-11-28 02:22:48 UTC (rev 22)
+++ trunk/fsfn/man/Makefile.in	2005-11-29 00:34:14 UTC (rev 23)
@@ -0,0 +1,380 @@
+# Makefile.in generated by automake 1.9.6 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+ at SET_MAKE@
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+subdir = man
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
+	$(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+man1dir = $(mandir)/man1
+am__installdirs = "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(man5dir)"
+man5dir = $(mandir)/man5
+NROFF = nroff
+MANS = $(man_MANS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALSA_CFLAGS = @ALSA_CFLAGS@
+ALSA_LIBS = @ALSA_LIBS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBXOSD_CFLAGS = @LIBXOSD_CFLAGS@
+LIBXOSD_CONFIG = @LIBXOSD_CONFIG@
+LIBXOSD_LIBS = @LIBXOSD_LIBS@
+LTLIBOBJS = @LTLIBOBJS@
+MAKEINFO = @MAKEINFO@
+OBJEXT = @OBJEXT@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build_alias = @build_alias@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host_alias = @host_alias@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+man_MANS = fsfn.1 fsfn.5
+EXTRA_DIST = $(man_MANS)
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  man/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  man/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+install-man1: $(man1_MANS) $(man_MANS)
+	@$(NORMAL_INSTALL)
+	test -z "$(man1dir)" || $(mkdir_p) "$(DESTDIR)$(man1dir)"
+	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
+	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
+	for i in $$l2; do \
+	  case "$$i" in \
+	    *.1*) list="$$list $$i" ;; \
+	  esac; \
+	done; \
+	for i in $$list; do \
+	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
+	  else file=$$i; fi; \
+	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
+	  case "$$ext" in \
+	    1*) ;; \
+	    *) ext='1' ;; \
+	  esac; \
+	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
+	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
+	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
+	  echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
+	  $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst"; \
+	done
+uninstall-man1:
+	@$(NORMAL_UNINSTALL)
+	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
+	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
+	for i in $$l2; do \
+	  case "$$i" in \
+	    *.1*) list="$$list $$i" ;; \
+	  esac; \
+	done; \
+	for i in $$list; do \
+	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
+	  case "$$ext" in \
+	    1*) ;; \
+	    *) ext='1' ;; \
+	  esac; \
+	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
+	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
+	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
+	  echo " rm -f '$(DESTDIR)$(man1dir)/$$inst'"; \
+	  rm -f "$(DESTDIR)$(man1dir)/$$inst"; \
+	done
+install-man5: $(man5_MANS) $(man_MANS)
+	@$(NORMAL_INSTALL)
+	test -z "$(man5dir)" || $(mkdir_p) "$(DESTDIR)$(man5dir)"
+	@list='$(man5_MANS) $(dist_man5_MANS) $(nodist_man5_MANS)'; \
+	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
+	for i in $$l2; do \
+	  case "$$i" in \
+	    *.5*) list="$$list $$i" ;; \
+	  esac; \
+	done; \
+	for i in $$list; do \
+	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
+	  else file=$$i; fi; \
+	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
+	  case "$$ext" in \
+	    5*) ;; \
+	    *) ext='5' ;; \
+	  esac; \
+	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
+	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
+	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
+	  echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man5dir)/$$inst'"; \
+	  $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man5dir)/$$inst"; \
+	done
+uninstall-man5:
+	@$(NORMAL_UNINSTALL)
+	@list='$(man5_MANS) $(dist_man5_MANS) $(nodist_man5_MANS)'; \
+	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
+	for i in $$l2; do \
+	  case "$$i" in \
+	    *.5*) list="$$list $$i" ;; \
+	  esac; \
+	done; \
+	for i in $$list; do \
+	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
+	  case "$$ext" in \
+	    5*) ;; \
+	    *) ext='5' ;; \
+	  esac; \
+	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
+	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
+	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
+	  echo " rm -f '$(DESTDIR)$(man5dir)/$$inst'"; \
+	  rm -f "$(DESTDIR)$(man5dir)/$$inst"; \
+	done
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(MANS)
+installdirs:
+	for dir in "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(man5dir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am: install-man
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man: install-man1 install-man5
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am uninstall-man
+
+uninstall-man: uninstall-man1 uninstall-man5
+
+.PHONY: all all-am check check-am clean clean-generic distclean \
+	distclean-generic distdir dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-man1 install-man5 install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
+	pdf-am ps ps-am uninstall uninstall-am uninstall-info-am \
+	uninstall-man uninstall-man1 uninstall-man5
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:

Modified: trunk/fsfn/man/fsfn.5
===================================================================
--- trunk/fsfn/man/fsfn.5	2005-11-28 02:22:48 UTC (rev 22)
+++ trunk/fsfn/man/fsfn.5	2005-11-29 00:34:14 UTC (rev 23)
@@ -14,15 +14,26 @@
 
 .TP
 .B DEVICE	
-Specifies the input device to use. Default to /dev/input/event0
+Specifies the input device to use. Setting it to   
+.B AUTO
+make fsfn try to figure out the correct device to use (BETA - NOT BY DEFAULT).
+Default to 
+.I /dev/input/event0
 
 .TP
+.B ALSA_NAME
+Specifies the mixer name to use for main volume. Default to 
+.I Front
+
+.TP
 .B OSD_VCOLOR	
-Specifies the OSD color for volume. Default to red
+Specifies the OSD color for volume. Default to 
+.I red
 
 .TP
 .B OSD_BCOLOR	
-Specifies the OSD color for brightness. Default to blue
+Specifies the OSD color for brightness. Default to 
+.I blue
 
 .TP
 .B OSD_FONT	

Modified: trunk/fsfn/src/Makefile.in
===================================================================
--- trunk/fsfn/src/Makefile.in	2005-11-28 02:22:48 UTC (rev 22)
+++ trunk/fsfn/src/Makefile.in	2005-11-29 00:34:14 UTC (rev 23)
@@ -40,9 +40,7 @@
 DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
 	$(srcdir)/Makefile.in
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/aclocal/alsa.m4 \
-	$(top_srcdir)/aclocal/libxosd.m4 \
-	$(top_srcdir)/aclocal/libxosd_version.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
 	$(top_srcdir)/configure.in
 am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
 	$(ACLOCAL_M4)



From muaddib at berlios.de  Tue Nov 29 03:31:13 2005
From: muaddib at berlios.de (muaddib at BerliOS)
Date: Tue, 29 Nov 2005 03:31:13 +0100
Subject: [Fsfn-svn] r24 - in trunk/fsfn: man src
Message-ID: <200511290231.jAT2VDkd028623@sheep.berlios.de>

Author: muaddib
Date: 2005-11-29 03:30:53 +0100 (Tue, 29 Nov 2005)
New Revision: 24

Modified:
   trunk/fsfn/man/fsfn.1
   trunk/fsfn/man/fsfn.5
   trunk/fsfn/src/alsasound.c
   trunk/fsfn/src/fsfn.c
   trunk/fsfn/src/osd.c
   trunk/fsfn/src/readconfig.c
   trunk/fsfn/src/readconfig.h
Log:
Rewrite of readconfig system... Should now be easier to handle.
Set AUTO as default since I don't get any trouble on my system and update man to reflect this


Modified: trunk/fsfn/man/fsfn.1
===================================================================
--- trunk/fsfn/man/fsfn.1	2005-11-29 00:34:14 UTC (rev 23)
+++ trunk/fsfn/man/fsfn.1	2005-11-29 02:30:53 UTC (rev 24)
@@ -18,7 +18,7 @@
 This command avoid deamonization of fsfn. This should only be used for debugging purpose
 .TP
 .B \-d | --device=<device>
-This command allows to change the default device (/dev/input/event0 or given in /etc/fsfn.conf)
+This command allows to change the default device (default is AUTO - meaning fsfn will try to find the good input device)
 .TP
 .B \-o | --osd
 This command launch the X graphical client. It can be launched without any additional user rights. Please note: a fsfn deamon must be launched beforehand. 

Modified: trunk/fsfn/man/fsfn.5
===================================================================
--- trunk/fsfn/man/fsfn.5	2005-11-29 00:34:14 UTC (rev 23)
+++ trunk/fsfn/man/fsfn.5	2005-11-29 02:30:53 UTC (rev 24)
@@ -14,11 +14,11 @@
 
 .TP
 .B DEVICE	
-Specifies the input device to use. Setting it to   
+Specifies the input device to use (e.g. /dev/input/event0 ). Setting this key to   
 .B AUTO
-make fsfn try to figure out the correct device to use (BETA - NOT BY DEFAULT).
+make fsfn tries to find the correct device to use.
 Default to 
-.I /dev/input/event0
+.I AUTO
 
 .TP
 .B ALSA_NAME

Modified: trunk/fsfn/src/alsasound.c
===================================================================
--- trunk/fsfn/src/alsasound.c	2005-11-29 00:34:14 UTC (rev 23)
+++ trunk/fsfn/src/alsasound.c	2005-11-29 02:30:53 UTC (rev 24)
@@ -97,7 +97,7 @@
 		snd_mixer_selem_id_alloca(&sid);
 		snd_mixer_selem_id_set_index(sid, 0);
 		//snd_mixer_selem_id_set_name(sid,"Front");
-		snd_mixer_selem_id_set_name(sid,getConfig(CFG_ALSA_NAME));
+		snd_mixer_selem_id_set_name(sid,getConfig("ALSA_NAME"));
 		
 		/* load elem */
 		elem = snd_mixer_find_selem(handle, sid);

Modified: trunk/fsfn/src/fsfn.c
===================================================================
--- trunk/fsfn/src/fsfn.c	2005-11-29 00:34:14 UTC (rev 23)
+++ trunk/fsfn/src/fsfn.c	2005-11-29 02:30:53 UTC (rev 24)
@@ -66,12 +66,12 @@
 
 // Check and run possible config
 // ret 1 if something executed - 0 otherwise
-int checkConfig(int CONFIGCODE) 
+int checkConfig(char* key) 
   {
 	char *buffer;
-	buffer=getConfig(CONFIGCODE);
+	buffer=getConfig(key);
 	
-	if (buffer[0]!='\0') {
+	if ((buffer)&&(buffer[0]!='\0')) {
 		syslog(LOG_NOTICE,"Executing [%s]",buffer);
 	 	if (fork () == 0)
 		{
@@ -84,7 +84,7 @@
 		return 1;
 	}
 	else {
-		syslog(LOG_INFO,"No config key");
+		syslog(LOG_INFO,"No config key for %s",key);
 	}
 	return 0;
   }
@@ -215,7 +215,7 @@
 	  if ((key & FN_F5) == FN_F5)
 	    { 
 	      	// check config
-	      	if (!checkConfig(FN_F5))
+	      	if (!checkConfig("F5_CMD"))
 		  {
 	      		// lower brightness
 #ifdef HAVE_LIBXOSD
@@ -230,7 +230,7 @@
 	  if ((key & FN_F6) == FN_F6)
 	    {
 	    	// check config
-		if (!checkConfig(FN_F6)) 
+		if (!checkConfig("F6_CMD")) 
 		  {
 		  	
 	    		// higher brightness
@@ -247,7 +247,7 @@
 	  if ((key & FN_F2) == FN_F2)
 	    {
 		// check config
-		if (!checkConfig(FN_F2))
+		if (!checkConfig("F2_CMD"))
 		  {
 #ifdef HAVE_LIBXOSD
 	      		flag = MOD_SOUND;
@@ -260,7 +260,7 @@
 	    }
 	  if ((key & FN_F3) == FN_F3)
 	    {
-		if (!checkConfig(FN_F3))
+		if (!checkConfig("F3_CMD"))
 	          {
 #ifdef HAVE_LIBXOSD
 	      		flag = MOD_SOUND;
@@ -273,7 +273,7 @@
 	    }
 	  if ((key & FN_F4) == FN_F4)
 	    {
-	       if (!checkConfig(FN_F4))
+	       if (!checkConfig("F4_CMD"))
 	         {
 #ifdef HAVE_LIBXOSD
 	      		flag = MOD_SOUND;
@@ -287,23 +287,23 @@
 	 /* NO built in commands */
 	  if ((key & FN_F7) == FN_F7)
 	    {
-		  checkConfig(FN_F7);
+		  checkConfig("F7_CMD");
 	    }
 	  if ((key & FN_F10) == FN_F10)
 	    {
-		  checkConfig(FN_F10);
+		  checkConfig("F10_CMD");
 	    }
 	  if ((key & FN_F12) == FN_F12)
 	    {
-		 checkConfig(FN_F12);
+		 checkConfig("F12_CMD");
 	    }
 	  if (( key & S1_BTN) == S1_BTN) 
 	    {
-		 checkConfig(S1_BTN);
+		 checkConfig("S1_CMD");
 	    }
 	  if (( key & S2_BTN) == S2_BTN)
 	    {
-		 checkConfig(S2_BTN);
+		 checkConfig("S2_CMD");
 	    }		  
 	}
     }// while
@@ -405,7 +405,7 @@
   /* fill a default */
   //strncpy (devinput, "/dev/input/event0", 255);
   
-  strncpy (devinput, getConfig(CFG_DEVICE), MAX_CFG_LENGTH);
+  strncpy (devinput, getConfig("DEVICE"), MAX_CFG_LENGTH);
 
   /* parse command line */
   while (0 == 0)

Modified: trunk/fsfn/src/osd.c
===================================================================
--- trunk/fsfn/src/osd.c	2005-11-29 00:34:14 UTC (rev 23)
+++ trunk/fsfn/src/osd.c	2005-11-29 02:30:53 UTC (rev 24)
@@ -36,12 +36,12 @@
 #include "readconfig.h"
 
 // the volume osd color
-#define OSD_VCOLOR 	getConfig(CFG_OSDVCOLOR)
+#define OSD_VCOLOR 	getConfig("OSD_VCOLOR")
 // the brightness osd color
-#define OSD_BCOLOR 	getConfig(CFG_OSDBCOLOR)
+#define OSD_BCOLOR 	getConfig("OSD_BCOLOR")
 // the osd font... change the 7th position for size
 // or use xfontsel to explore the options
-#define OSD_FONT 	getConfig(CFG_OSDFONT)
+#define OSD_FONT 	getConfig("OSD_FONT")
 // the length of time the osd is shown
 #define OSD_TIME 3
 

Modified: trunk/fsfn/src/readconfig.c
===================================================================
--- trunk/fsfn/src/readconfig.c	2005-11-29 00:34:14 UTC (rev 23)
+++ trunk/fsfn/src/readconfig.c	2005-11-29 02:30:53 UTC (rev 24)
@@ -31,36 +31,121 @@
 #include "readconfig.h"
 #include "generics.h"
 
-
-typedef struct {
+struct config_entry {
+	char* name;
+	char* value;
+} config_list[] = 
+{
 	// keys
-	char F2_CMD[MAX_CFG_LENGTH];
-	char F3_CMD[MAX_CFG_LENGTH];
-	char F4_CMD[MAX_CFG_LENGTH];
-	char F5_CMD[MAX_CFG_LENGTH];
-	char F6_CMD[MAX_CFG_LENGTH];
-	char F7_CMD[MAX_CFG_LENGTH];
-	char F10_CMD[MAX_CFG_LENGTH];
-	char F12_CMD[MAX_CFG_LENGTH];
-	char S1_CMD[MAX_CFG_LENGTH];
-	char S2_CMD[MAX_CFG_LENGTH];
-	// others
-	// osd
-	char OSD_VCOLOR[MAX_CFG_LENGTH];
-	char OSD_BCOLOR[MAX_CFG_LENGTH];
-	char OSD_FONT[MAX_CFG_LENGTH];
-	// device
-	char DEVICE[MAX_CFG_LENGTH];
-	// alsa name
-	char ALSA_NAME[MAX_CFG_LENGTH];
-} config_list;
+	{
+		.name = "F2_CMD",
+		.value = NULL,
+	},
+	{
+		.name = "F3_CMD",
+		.value = NULL,
+	},
+	{
+		.name = "F4_CMD",
+		.value = NULL,
+	},
+	{
+		.name = "F5_CMD",
+		.value = NULL,
+	},
+	{
+		.name = "F6_CMD",
+		.value = NULL,
+	},
+	{
+		.name = "F7_CMD",
+		.value = NULL,
+	},
+	{
+		.name = "F10_CMD",
+		.value = NULL,
+	},
+	{
+		.name = "F12_CMD",
+		.value = NULL,
+	},
+	{
+		.name = "S1_CMD",
+		.value = NULL,
+	},
+	{
+		.name = "S2_CMD",
+		.value = NULL,
+	},
+	// OSD
+	{
+		.name = "OSD_FONT",
+		.value = NULL,
+	},
+	{
+		.name = "OSD_VCOLOR",
+		.value = NULL,
+	},
+	{
+		.name = "OSD_BCOLOR",
+		.value = NULL,
+	},
+	// DEVICE
+	{
+		.name = "DEVICE",
+		.value = NULL,
+	},
+	// ALSA
+	{
+		.name = "ALSA_NAME",
+		.value = NULL,
+	},
+	{
+		.name = NULL
+	}
+};
 
-config_list* UserConfig=NULL;
-
+// def functions
+char* getConfigValue(char* key);
+int setConfigValue(char*key,char* value);
 void proceedConfig(char* name,char* value);
 void setDefConfig();
+char* strtrim(char* name);
+void loadConfig();
+void releaseConfig();
+char* getConfig(char* key);
 
 
+// get a config key
+char* getConfigValue(char* key) {
+	struct config_entry* it;
+	for (it=config_list; it->name ; it++) {
+		if (!strcasecmp(it->name,key)) {
+			return it->value;
+		}
+	}
+	return NULL;
+}
+
+// set a config key
+int setConfigValue(char*key,char* value) {
+	struct config_entry* it;
+	for (it=config_list; it->name ; it++) {
+		if (!strcasecmp(it->name,key)) {
+			if (it->value!=NULL) {
+				free(it->value);
+				it->value=NULL; // to keep clean...
+			}
+			it->value=(char*)malloc(strlen(value)+1);
+			strcpy(it->value,value);
+			return 1;
+		}
+	}
+	return -1;
+}
+
+
+
 // dirty trim
 char* strtrim(char* name) {
 	register int i=strlen(name)-1;
@@ -79,93 +164,33 @@
 
 // store name/value for possible value
 void proceedConfig(char* name,char* value) {
-
 	// trim for any extra char
 	strtrim(name);
 	strtrim(value);
 	
-	if (strcasecmp(name,"DEVICE")==0) {
-		strncpy(UserConfig->DEVICE,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"DEVICE=%s",UserConfig->DEVICE);
+	if (setConfigValue(name,value)) {
+		syslog(LOG_INFO,"Configuration: %s=%s",name,value);
 	}
-#ifdef HAVE_LIBXOSD
-	else if (strcasecmp(name,"OSD_VCOLOR")==0) {
-		strncpy(UserConfig->OSD_VCOLOR,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"OSD_VCOLOR=%s",UserConfig->OSD_VCOLOR);
-	}
-	else if (strcasecmp(name,"OSD_BCOLOR")==0) {
-		strncpy(UserConfig->OSD_BCOLOR,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"OSD_BCOLOR=%s",UserConfig->OSD_BCOLOR);
-	}
-	else if (strcasecmp(name,"OSD_FONT")==0) {
-		strncpy(UserConfig->OSD_FONT,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"OSD_FONT=%s",UserConfig->OSD_FONT);
-	}
-#endif
-	else if (strcasecmp(name,"ALSA_NAME")==0) {
-		strncpy(UserConfig->ALSA_NAME,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"ALSA_NAME=%s",UserConfig->ALSA_NAME);
-	}
-	else if (strcasecmp(name,"F2_CMD")==0) {
-		strncpy(UserConfig->F2_CMD,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"F2_CMD=%s",UserConfig->F2_CMD);
-	}	
-	else if (strcasecmp(name,"F2_CMD")==0) {
-		strncpy(UserConfig->F2_CMD,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"F2_CMD=%s",UserConfig->F2_CMD);
-	}
-	else if (strcasecmp(name,"F3_CMD")==0) {
-		strncpy(UserConfig->F3_CMD,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"F3_CMD=%s",UserConfig->F3_CMD);
-	}
-	else if (strcasecmp(name,"F4_CMD")==0) {
-		strncpy(UserConfig->F4_CMD,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"F4_CMD=%s",UserConfig->F4_CMD);
-	}
-	else if (strcasecmp(name,"F5_CMD")==0) {
-		strncpy(UserConfig->F5_CMD,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"F5_CMD=%s",UserConfig->F5_CMD);
-	}
-	else if (strcasecmp(name,"F6_CMD")==0) {
-		strncpy(UserConfig->F6_CMD,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"F6_CMD=%s",UserConfig->F6_CMD);
-	}
-	else if (strcasecmp(name,"F7_CMD")==0) {
-		strncpy(UserConfig->F7_CMD,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"F7_CMD=%s",UserConfig->F7_CMD);
-	}
-	else if (strcasecmp(name,"F10_CMD")==0) {
-		strncpy(UserConfig->F10_CMD,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"F10_CMD=%s",UserConfig->F10_CMD);
-	}
-	else if (strcasecmp(name,"F12_CMD")==0) {
-		strncpy(UserConfig->F12_CMD,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"F12_CMD=%s",UserConfig->F12_CMD);
-	}
-	else if (strcasecmp(name,"S1_CMD")==0) {
-		strncpy(UserConfig->S1_CMD,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"S1_CMD=%s",UserConfig->S1_CMD);
-	}
-	else if (strcasecmp(name,"S2_CMD")==0) {
-		strncpy(UserConfig->S2_CMD,value,MAX_CFG_LENGTH);
-		syslog(LOG_INFO,"S2_CMD=%s",UserConfig->S2_CMD);
-	}
 	else {
-		syslog(LOG_NOTICE,"Unknow config entry:  %s=%s\n",name,value);
-	}
+		syslog(LOG_NOTICE,"Configuration: %s=%s is unknown",name,value);
+	}		
 }
 
 // set default value for config
 void setDefConfig() 
   {
-	strncpy(UserConfig->DEVICE,"/dev/input/event0",MAX_CFG_LENGTH);
-	strncpy(UserConfig->ALSA_NAME,"Front",MAX_CFG_LENGTH);
-	strncpy(UserConfig->F12_CMD,"/bin/hibernate",MAX_CFG_LENGTH);
-	strncpy(UserConfig->OSD_VCOLOR,"red",MAX_CFG_LENGTH);
-	strncpy(UserConfig->OSD_BCOLOR,"blue",MAX_CFG_LENGTH);
-	strncpy(UserConfig->OSD_FONT,"-*-*-*-*-*-*-20-*-*-*-*-*-*-*",MAX_CFG_LENGTH);
+	syslog(LOG_INFO,"Setting default configuration");
+	proceedConfig("DEVICE","AUTO");
+	proceedConfig("ALSA_NAME","Front");
+	proceedConfig("F12_CMD","/bin/hibernate");
+	proceedConfig("OSD_VCOLOR","red");
+	proceedConfig("OSD_BCOLOR","blue");
+	proceedConfig("OSD_FONT","-*-*-*-*-*-*-20-*-*-*-*-*-*-*");
+	syslog(LOG_INFO,"default configuration done");
   }
 
+// keep track of config loading state
+int _config_loaded=0;
 // load
 void loadConfig() {
 	FILE*	configFile;
@@ -173,15 +198,16 @@
 	char 	name[MAX_CFG_LENGTH+MAX_CFG_NAME_LENGTH];
 	char	value[MAX_CFG_LENGTH+MAX_CFG_NAME_LENGTH];
 
+	// load if needed
+	if (_config_loaded) 
+		return;
+	// release previous config
+	releaseConfig();
+
+	_config_loaded=1; // set status as loaded
+
 	syslog(LOG_INFO,"Loading config file %s",USER_CONFIG_FILE);
 	
-	if (UserConfig==NULL) {
-		UserConfig=(config_list*) malloc(sizeof(config_list));
-	}
-
-	// reset
-	memset(UserConfig,0,sizeof(config_list));
-
 	// set default values
 	setDefConfig();	
 
@@ -224,38 +250,18 @@
 
 // release 
 void releaseConfig() {
-	if (UserConfig!=NULL) {
-		free(UserConfig);
-	}	
+	struct config_entry* it;
+	for (it=config_list; it->name ; ++it) {
+		if (it->value) {
+			free(it->value);
+			it->value=NULL;
+		}
+	}
+	_config_loaded=0;
 }
 
 // return stored command - config 
-char* getConfig(int CONFIGCODE) {
-	if (UserConfig==NULL) {
-		loadConfig(); // proceed with config loading
-	}
-	// recheck in case of a config problems...
-	if (UserConfig!=NULL) {
-		switch(CONFIGCODE) {
-			// button commands
-			case FN_F2: return UserConfig->F2_CMD;
-			case FN_F3: return UserConfig->F3_CMD;	
-			case FN_F4: return UserConfig->F4_CMD;
-			case FN_F5: return UserConfig->F5_CMD;
-			case FN_F6: return UserConfig->F6_CMD;
-			case FN_F7: return UserConfig->F7_CMD;
-			case FN_F10: return UserConfig->F10_CMD;
-			case FN_F12: return UserConfig->F12_CMD;
-			case S1_BTN: return UserConfig->S1_CMD;
-			case S2_BTN: return UserConfig->S2_CMD;
-			// other configs
-			case CFG_DEVICE: return UserConfig->DEVICE;
-			case CFG_OSDVCOLOR: return UserConfig->OSD_VCOLOR;
-			case CFG_OSDBCOLOR: return UserConfig->OSD_BCOLOR;
-			case CFG_OSDFONT: return UserConfig->OSD_FONT;
-			case CFG_ALSA_NAME: return UserConfig->ALSA_NAME;
-			default: break;
-		}
-	}	
-	return NULL;
+char* getConfig(char* key) {
+	loadConfig();
+	return getConfigValue(key);
 }

Modified: trunk/fsfn/src/readconfig.h
===================================================================
--- trunk/fsfn/src/readconfig.h	2005-11-29 00:34:14 UTC (rev 23)
+++ trunk/fsfn/src/readconfig.h	2005-11-29 02:30:53 UTC (rev 24)
@@ -24,7 +24,7 @@
 void loadConfig();
 void releaseConfig();
 
-char* getConfig(int CONFIGCODE);
+char* getConfig(char*);
 #define USER_CONFIG_FILE	"/etc/fsfn.conf"
 
 



From muaddib at berlios.de  Tue Nov 29 04:25:34 2005
From: muaddib at berlios.de (muaddib at BerliOS)
Date: Tue, 29 Nov 2005 04:25:34 +0100
Subject: [Fsfn-svn] r25 - trunk/fsfn
Message-ID: <200511290325.jAT3PYbY022286@sheep.berlios.de>

Author: muaddib
Date: 2005-11-29 04:25:31 +0100 (Tue, 29 Nov 2005)
New Revision: 25

Modified:
   trunk/fsfn/AUTHORS
   trunk/fsfn/ChangeLog
   trunk/fsfn/INSTALL
   trunk/fsfn/README
Log:
Updated docs


Modified: trunk/fsfn/AUTHORS
===================================================================
--- trunk/fsfn/AUTHORS	2005-11-29 02:30:53 UTC (rev 24)
+++ trunk/fsfn/AUTHORS	2005-11-29 03:25:31 UTC (rev 25)
@@ -1,2 +1,3 @@
-Poissinger Pierre <pierre.poissinger at gmail.com>
+Pierre Poissinger <pierre.poissinger at gmail.com>
 Spencer Shimko <spencer at beyondabstraction.net>
+Garry Williams <gtwilliams at gmail.com>

Modified: trunk/fsfn/ChangeLog
===================================================================
--- trunk/fsfn/ChangeLog	2005-11-29 02:30:53 UTC (rev 24)
+++ trunk/fsfn/ChangeLog	2005-11-29 03:25:31 UTC (rev 25)
@@ -0,0 +1 @@
+see http://svn.berlios.de/wsvn/fsfn/?op=log&rev=HEAD&sc=0

Modified: trunk/fsfn/INSTALL
===================================================================
--- trunk/fsfn/INSTALL	2005-11-29 02:30:53 UTC (rev 24)
+++ trunk/fsfn/INSTALL	2005-11-29 03:25:31 UTC (rev 25)
@@ -105,6 +105,8 @@
 you can use the `configure' options `--x-includes=DIR' and
 `--x-libraries=DIR' to specify their locations.
 
+   If you don't want to use XOSD subsytem, use `--disable-xosd' configure option. 
+
 Specifying the System Type
 ==========================
 

Modified: trunk/fsfn/README
===================================================================
--- trunk/fsfn/README	2005-11-29 02:30:53 UTC (rev 24)
+++ trunk/fsfn/README	2005-11-29 03:25:31 UTC (rev 25)
@@ -0,0 +1,51 @@
+PREREQUISITE:
+=============
+a) patched sony_acpi:
+---------------------
+To use fsfn, please first compile and install sony_acpi kernel module. It's available at http://download.berlios.de/fsfn/sony_acpi.tar.gz .
+
+	wget http://download.berlios.de/fsfn/sony_acpi.tar.gz
+	tar zxvf sony_acpi.tar.gz
+	cd sony_acpi
+	make && sudo make install 
+
+Check if the module fit your kernel
+Code:
+
+	modprobe sony_acpi
+	ls /proc/acpi/sony
+
+You should see
+
+	brightness  brightness_default  fnkey
+
+If fine, add sony_acpi to your autoloaded modules (check documentation of your distribution if needed)
+
+b) xosd:
+--------
+You will need xosd if you want OSD output. see http://freshmeat.net/projects/xosd/ for informations.
+
+You can still compile/install and use fsfn without XOSD, using `--disable-xosd' configure flag (./configure --disable-xosd) but this is not recommended since you will miss a really sweet option of fsfn.
+
+INSTALLATION:
+=============
+Check INSTALL documents.
+
+USAGE:
+======
+See `man fsfn' and `man 5 fsfn' for usage.
+
+BUGS/PROBLEMS:
+==============
+Post them at http://developer.berlios.de/bugs/?group_id=4604
+
+LAST NOTE:
+==========
+Have fun with your laptop, and remember
+	
+	Computers are like air conditioners. 
+	Both stop working, if you open windows. 
+		-- Adam Heath
+
+
+ 



From muaddib at berlios.de  Wed Nov 30 04:13:27 2005
From: muaddib at berlios.de (muaddib at BerliOS)
Date: Wed, 30 Nov 2005 04:13:27 +0100
Subject: [Fsfn-svn] r26 - trunk/sony_acpi
Message-ID: <200511300313.jAU3DRg2022088@sheep.berlios.de>

Author: muaddib
Date: 2005-11-30 04:13:26 +0100 (Wed, 30 Nov 2005)
New Revision: 26

Modified:
   trunk/sony_acpi/Makefile
Log:
Updated Makefile


Modified: trunk/sony_acpi/Makefile
===================================================================
--- trunk/sony_acpi/Makefile	2005-11-29 03:25:31 UTC (rev 25)
+++ trunk/sony_acpi/Makefile	2005-11-30 03:13:26 UTC (rev 26)
@@ -1,3 +1,8 @@
+#
+# Makefile for the Linux Wireless network device drivers.
+#
+# using bit's from makefile by Peter Johanson
+
 ifneq ($(KERNELRELEASE),)
 
 obj-m := sony_acpi.o
@@ -8,17 +13,46 @@
 
 else
 
-KDIR := /lib/modules/$(shell uname -r)/build
+# KSRC should be set to the path to your sources
+# modules are installed into KMISC
+KVER  := $(shell uname -r)
+KSRC := /lib/modules/$(KVER)/build
+KMISC := /lib/modules/$(KVER)/kernel/drivers/acpi/
+KMISC_INC := /lib/modules/$(KVER)/include
+
+# KSRC_OUTPUT should be overridden if you are using a 2.6 kernel that
+# has it's output sent elsewhere via KBUILD_OUTPUT= or O=
+KSRC_OUTPUT := $(KSRC)
+
+VERFILE := $(KSRC_OUTPUT)/include/linux/version.h
+KERNELRELEASE := $(shell \
+	if [ -r $(VERFILE) ]; then \
+		(cat $(VERFILE); echo UTS_RELEASE) | \
+		$(CC) -I$(KSRC_OUTPUT) $(CFLAGS) -E - | \
+		tail -n 1 | \
+		xargs echo; \
+        else \
+		uname -r; \
+	fi)
+
+MODPATH := $(DESTDIR)/lib/modules/$(KERNELRELEASE)
 PWD := $(shell pwd)
 
-default:
-	$(MAKE) -C $(KDIR) SUBDIRS=$(PWD) modules
+default: modules
 
-endif
+modules:
+	$(MAKE) -C $(KSRC) SUBDIRS=$(PWD) modules
 
 install:
-	cp sony_acpi.ko /lib/modules/$(shell uname -r)/kernel/drivers/acpi/
-	depmod -a
+#install -d $(KMISC)
+	install -m 644 -c sony_acpi.ko $(KMISC)
+	/sbin/depmod -a
 
+uninstall:
+	rm -rf $(addprefix $(KMISC),sony_acpi.ko)
+	/sbin/depmod -a
+
+endif
+
 clean:
 	rm -rf *.[oas] .*.flags *.ko .*.cmd .*.d .*.tmp *.mod.c .tmp_versions



